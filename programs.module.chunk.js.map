{"version":3,"sources":["C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-actions-popover/program-actions-popover.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-actions-popover/program-actions-popover.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-actions-popover/program-actions-popover.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-status/program-status.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-status/program-status.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-status/program-status.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs-routing.module.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs.module.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.service.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-configurations/program-configurations-modal.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-configurations/program-configurations-modal.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-configurations/program-configurations-modal.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-configurations/program-configurations-modal.service.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/programs-maintenance/programs-maintenance-modal.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/programs-maintenance/programs-maintenance-modal.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/programs-maintenance/programs-maintenance-modal.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/programs-maintenance/programs-maintenance-modal.service.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/shared/classes/modal-helpers.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/shared/model/program-profile.ts"],"names":[],"mappings":"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","file":"programs.module.chunk.js","sourcesContent":["module.exports = \"<ng-template #popContent>\\r\\n  <div class=\\\"w-100 outer-popover\\\"\\r\\n    (click)=\\\"onClick($event)\\\"\\r\\n    (appClickOutside)=\\\"onClickedOutside($event, p)\\\"\\r\\n    [attachOutsideOnClick]=\\\"attachOutsideOnClick\\\"\\r\\n    [delayClickOutsideInit]=\\\"delayClickOutsideInit\\\"\\r\\n    [clickOutsideEvents]=\\\"clickOutsideEvents\\\"\\r\\n    [exclude]=\\\"exclude\\\"\\r\\n    [excludeBeforeClick]=\\\"excludeBeforeClick\\\">\\r\\n\\r\\n  <div class=\\\"float-left inner-popover\\\">\\r\\n    <span class=\\\"badge badge-info clickable\\\"\\r\\n         (click)=\\\"configure(progId, 'edit'); p.close();\\\"\\r\\n          title=\\\"Configure/Edit Program {{progId}}: {{progName}} \\\">\\r\\n      Edit</span></div>\\r\\n  <div class=\\\"float-left inner-popover\\\">\\r\\n    <span class=\\\"badge badge-info clickable\\\"\\r\\n         (click)=\\\"configure(progId, 'expire'); p.close();\\\"\\r\\n          title=\\\"Expire Program {{progId}}: {{progName}} \\\">\\r\\n      Expire</span></div>\\r\\n  <div class=\\\"float-left inner-popover\\\">\\r\\n    <span class=\\\"badge badge-info clickable\\\"\\r\\n         (click)=\\\"configure(progId, 'client'); p.close();\\\"\\r\\n          title=\\\"Configure Client Exceptions for Program {{progId}}: {{progName}} \\\">\\r\\n      Client<br/>Exceptions</span></div>\\r\\n  <div class=\\\"float-right inner-popover\\\">\\r\\n    <span class=\\\"badge badge-info clickable\\\"\\r\\n         (click)=\\\"configure(progId, 'communications'); p.close();\\\"\\r\\n          title=\\\"Configure Communications for Program {{progId}}: {{progName}} \\\">\\r\\n      Configure<br/>Communications</span></div>\\r\\n</div>\\r\\n</ng-template>\\r\\n<div [ngbPopover]=\\\"popContent\\\"\\r\\n      #p=\\\"ngbPopover\\\"\\r\\n      popoverTitle=\\\"\\\"\\r\\n      placement=\\\"left\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-actions-popover/program-actions-popover.component.html\n// module id = ../../../../../src/app/programs/program-actions-popover/program-actions-popover.component.html\n// module chunks = programs.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".outer-popover,\\n.inner-popover {\\n  display: block; }\\n\\n.outer-popover {\\n  width: 300px;\\n  padding: 0; }\\n\\n.inner-popover {\\n  padding: 5px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-actions-popover/program-actions-popover.component.scss\n// module id = ../../../../../src/app/programs/program-actions-popover/program-actions-popover.component.scss\n// module chunks = programs.module","import { Component, OnInit,\r\n         Input, Output, EventEmitter,\r\n         ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Program, ProgramConfigAction } from 'app/shared/model/program';\r\n\r\n@Component({\r\n  selector: 'app-program-actions-popover',\r\n  templateUrl: './program-actions-popover.component.html',\r\n  styleUrls: ['./program-actions-popover.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProgramActionsPopoverComponent implements OnInit {\r\n\r\n  private attachOutsideOnClick = false;\r\n  private delayClickOutsideInit = true;\r\n  private clickOutsideEvents = 'click';\r\n  private exclude = 'ngbPopover ngb-popover';\r\n  private excludeBeforeClick = false;\r\n\r\n  @Input() progId: string;\r\n  @Input() progName: string;\r\n  @Output() configAction = new EventEmitter<any>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  configure(id, config) {\r\n    console.log('ActionsPopoverComponent configure: ', id, config);\r\n    const progConfigAction:  ProgramConfigAction = new ProgramConfigAction(id, config);\r\n    this.configAction.emit(progConfigAction);\r\n  }\r\n\r\n  private onClick(e: Event) {\r\n    console.log('Clicked inside:', e);\r\n  }\r\n\r\n  private onClickedOutside(e: Event, p: any) {\r\n    console.log('Clicked outside:', e);\r\n    p.close();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-actions-popover/program-actions-popover.component.ts","module.exports = \"<span *ngIf=\\\"progressVisible\\\">\\r\\n    <i class=\\\"fa fa-refresh fa-pulse \\\"></i>\\r\\n</span>\\r\\n<span *ngIf=\\\"!progressVisible && program.status\\\">\\r\\n  <small>{{program.status.effExpDateText}}</small>\\r\\n</span>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-status/program-status.component.html\n// module id = ../../../../../src/app/programs/program-status/program-status.component.html\n// module chunks = programs.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-status/program-status.component.scss\n// module id = ../../../../../src/app/programs/program-status/program-status.component.scss\n// module chunks = programs.module","import { Component, OnInit, OnChanges,\r\n         SimpleChanges, SimpleChange,\r\n         Input, Output, EventEmitter,\r\n         ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Program, ProgramConfigAction, ProgramStatus } from 'app/shared/model/program';\r\nimport { ProgramProfile } from 'app/shared/model/program-profile';\r\n\r\n@Component({\r\n  selector: 'app-program-status',\r\n  templateUrl: './program-status.component.html',\r\n  styleUrls: ['./program-status.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProgramStatusComponent implements OnInit, OnChanges {\r\n// mostly totally unnecessary, was thinking though how this could be done\r\n\r\n  @Input() program: Program;\r\n  @Input() detectChanges: any = '';\r\n  // @Output() statusUpdate = new EventEmitter<any>();\r\n\r\n  progressVisible: boolean = false;\r\n  prevStatus: any = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    console.log('ProgramStatusComponent OnInit', this.program);\r\n    this.program.status = new ProgramStatus(this.program);\r\n    this.showProgress();\r\n  }\r\n\r\n  async ngOnChanges(changes: SimpleChanges) {\r\n    console.log('ProgramStatusComponent OnChanges', changes);\r\n    // OnChanges happens before OnInit -- just bypass that call here\r\n    if (!this.prevStatus) {\r\n      return;\r\n    } else if (changes.detectChanges &&  changes.detectChanges.currentValue) {\r\n      console.log(changes.detectChanges);\r\n      if (changes.detectChanges.currentValue === 'saving' ||\r\n          changes.detectChanges.currentValue === 'expired' ||\r\n          changes.detectChanges.currentValue === 'edited') {\r\n        // this.program.status = new ProgramStatus(this.program);\r\n        // this.program.status.update(this.program);\r\n        this.showProgress();\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  private showProgress() {\r\n    this.progressVisible = true;\r\n    setTimeout(function() {\r\n      // this.statusUpdate.emit(this.program.status);\r\n      this.prevStatus = this.program.status;\r\n      this.progressVisible = false;\r\n    }.bind(this), 1000);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/program-status/program-status.component.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ProgramsComponent } from './programs.component';\r\n\r\nconst routes: Routes =  [\r\n  { path: '',    component: ProgramsComponent }\r\n];\r\n\r\nexport const routedComponents = [ProgramsComponent];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProgramsRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs-routing.module.ts","module.exports = \"<h4>Manage Programs</h4>\\r\\n\\r\\n<table class=\\\"table table-responsive table-sm table-striped table-bordered table-hover\\\">\\r\\n  <caption>\\r\\n    Programs define collections of Communications, each with a program-level configuration that \\r\\n    specify the (default) channel priority, if the comm is mandatory, with an effective and expiration date\\r\\n  </caption>\\r\\n  <thead class=\\\"bg-gradient-dark text-white\\\">\\r\\n    <tr>\\r\\n      <th>ID</th>\\r\\n      <th>Name</th>\\r\\n      <th>Description</th>\\r\\n      <th>Status</th>\\r\\n      <th>Actions</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let program of programs; let i = index\\\"\\r\\n         title=\\\"\\\" \\r\\n        (click)=\\\"setClickedRow(i)\\\" \\r\\n        [class.table-info]=\\\"i === selectedRow\\\">\\r\\n      <th scope=\\\"row\\\"><span class=\\\"badge badge-secondary\\\">{{program.id}}</span></th>\\r\\n      <td><span>{{program.name}}</span></td>\\r\\n      <td><span>{{program.description}}</span></td>\\r\\n      <td>\\r\\n        <app-program-status\\r\\n          [program]=\\\"program\\\"\\r\\n          [detectChanges]=\\\"program.detectChanges\\\"></app-program-status>\\r\\n          <!--(statusUpdate)=\\\"updateProgramStatus($event, program)\\\"-->\\r\\n      </td>\\r\\n      <td>\\r\\n        <app-program-actions-popover\\r\\n          [progId]=\\\"program.id\\\"\\r\\n          [progName]=\\\"program.name\\\"\\r\\n          (configAction)=\\\"configureProgram($event)\\\">\\r\\n          <i class=\\\"fa fa-pencil-square-o clickable\\\" \\r\\n             [ngClass]=\\\"{'sr-only': program.status.expiredProgram}\\\"\\r\\n             aria-hidden=\\\"true\\\" title=\\\"Click to configure Program {{program.name}}\\\"></i>\\r\\n        </app-program-actions-popover>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <i class=\\\"fa fa-plus-square-o clickable\\\" aria-hidden=\\\"true\\\" \\r\\n          (click)=\\\"addProgram()\\\"title=\\\"Add New Program\\\"></i>\\r\\n      </td>\\r\\n\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <tfoot></tfoot>\\r\\n</table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs.component.html\n// module id = ../../../../../src/app/programs/programs.component.html\n// module chunks = programs.module","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".flex-justify-left {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: start;\\n      -ms-flex-pack: start;\\n          justify-content: flex-start;\\n  -webkit-box-align: left;\\n      -ms-flex-align: left;\\n          align-items: left;\\n  padding: 0 0 0 10px; }\\n\\n.flex-justify-center {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; }\\n\\n.flex-justify-right {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end;\\n  -webkit-box-align: right;\\n      -ms-flex-align: right;\\n          align-items: right; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs.component.scss\n// module id = ../../../../../src/app/programs/programs.component.scss\n// module chunks = programs.module","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { ModalStaticHelper, ModalResult } from 'app/shared/classes/modal-helpers';\r\nimport { Program, ProgramConfigAction, ProgramStatus } from 'app/shared/model/program';\r\nimport { ProgramProfile } from 'app/shared/model/program-profile';\r\nimport { DataApiService } from 'app/shared/services/data-api.service';\r\n\r\nimport { ProgramClientExceptionsModalService,\r\n         ProgramClientExceptionsModalResult } from './services/program-client-exceptions/program-client-exceptions-modal.service';\r\nimport { ProgramConfigurationsModalService } from './services/program-configurations/program-configurations-modal.service';\r\nimport { ProgramsMaintenanceModalService,\r\n         ProgramsMaintModalResult } from './services/programs-maintenance/programs-maintenance-modal.service';\r\n\r\n@Component({\r\n  selector: 'app-programs',\r\n  templateUrl: './programs.component.html',\r\n  styleUrls: ['./programs.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProgramsComponent implements OnInit {\r\n\r\n  programs: Program[];\r\n  programProfiles: ProgramProfile[];\r\n  selectedRow: number;\r\n  detectChanges: any = '';\r\n\r\n  constructor(\r\n    private dataApiService: DataApiService,\r\n    private programClientExcService: ProgramClientExceptionsModalService,\r\n    private programConfigService: ProgramConfigurationsModalService,\r\n    private programsMaintService: ProgramsMaintenanceModalService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    // console.log('ProgramComponent ngOnInit...');\r\n    await this.getPrograms();\r\n    // console.log('ProgramComponent ', this.programs, this.programProfiles);\r\n  }\r\n\r\n  async getPrograms() {\r\n    try {\r\n      this.programs = await this.dataApiService.getPrograms();\r\n      await this.getProgramProfiles();\r\n      for (let i = 0; i < this.programs.length; i++) {\r\n        this.findEffectiveProgramProfile(this.programs[i]);\r\n      }\r\n    } catch (error) {\r\n      console.log('getPrograms error: ', error);\r\n    }\r\n  }\r\n\r\n  async getProgramProfiles() {\r\n    try {\r\n      this.programProfiles = await this.dataApiService.getProgramProfiles();\r\n      return this.programProfiles;\r\n    } catch (error) {\r\n      console.log('getPrograms error: ', error);\r\n    }\r\n  }\r\n\r\n  findEffectiveProgramProfile(program: Program) {\r\n    if (program && program.programProfile) {\r\n      let profiles = program.programProfile;\r\n      if (profiles.length !== 0 && typeof profiles[profiles.length - 1].expiration !== 'undefined') {\r\n        return; // do nothing, everything is cool\r\n      }\r\n      if (profiles.length === 0 ||\r\n         (profiles.length !== 0 && typeof profiles[profiles.length - 1] === 'number')) {\r\n        // really only happens in the in-memory-api exception case\r\n        profiles = this.findProgramProfiles(program);\r\n        // yes, this is a side-effect\r\n        program.programProfile = profiles;\r\n        if (program.status) {\r\n          program.status.update(program);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private findProgramProfiles(selectedProgram: Program): ProgramProfile[] {\r\n\r\n    return this.programProfiles.filter(pp => {\r\n      if (typeof(pp.program) === 'number') {\r\n        if (pp.program === selectedProgram.id) {\r\n          return true;\r\n        } else { return false; }\r\n      }\r\n    });\r\n  }\r\n\r\n  private setClickedRow(index) {\r\n    this.selectedRow = (this.selectedRow === index) ? null : index;\r\n  }\r\n\r\n  private async addProgram() {\r\n    const nextProgramId = this.programs[this.programs.length - 1].id + 1;\r\n    const addResult: ModalResult = await this.programsMaintService.maintainProgram('add', nextProgramId);\r\n    const addedProgram = addResult.modalOutput.resultProgram;\r\n    console.log('ProgramsComponent addProgram:', addResult, addedProgram);\r\n\r\n    if (addedProgram && !addedProgram.status) {\r\n      addedProgram.status = new ProgramStatus(addedProgram);\r\n\r\n    } else {\r\n      addedProgram.status.update(addedProgram);\r\n    }\r\n\r\n  }\r\n\r\n  private async configureProgram(progConfigAction: ProgramConfigAction) {\r\n    if (progConfigAction.configType === 'edit') {\r\n      this.editProgram(progConfigAction.progId).then( async (editResult: ModalResult) => {\r\n        console.log('ProgramsComponent editProgram:', editResult);\r\n        if (editResult.success) {\r\n          // easy way out, just refresh all programs\r\n          // await this.getPrograms();\r\n          // pro-level, find the one program that was updated and replace it in the array\r\n          const modalOutput: ProgramsMaintModalResult = editResult.modalOutput;\r\n          const editProgram: Program = modalOutput.resultProgram;\r\n          await this.replaceUpdatedProgram(editProgram);\r\n        }\r\n      });\r\n    }\r\n    if (progConfigAction.configType === 'expire') {\r\n      const expireResult: ModalResult = await this.expireProgram(progConfigAction.progId);\r\n      if (expireResult.success) {\r\n        // await this.getPrograms();\r\n        const modalOutput: ProgramsMaintModalResult = expireResult.modalOutput;\r\n        const expireProgram: Program = modalOutput.resultProgram;\r\n        await this.replaceUpdatedProgram(expireProgram);\r\n      }\r\n\r\n    }\r\n    if (progConfigAction.configType === 'client') {\r\n      const clientResult: ModalResult = await this.configureProgramClientExceptions(progConfigAction.progId);\r\n      // nothing in this component view should change as a result\r\n    }\r\n    if (progConfigAction.configType === 'communications') {\r\n      const clientResult: ModalResult = await this.configureProgramCommunications(progConfigAction.progId);\r\n    }\r\n    this.setClickedRow(null);\r\n  }\r\n\r\n  private async editProgram(progId): Promise<ModalResult> {\r\n    const updateProgram: Program = this.findProgram(progId);\r\n    const result: ModalResult = await this.programsMaintService.maintainProgram('edit', null, updateProgram);\r\n    return result;\r\n  }\r\n\r\n  private async expireProgram(progId): Promise<ModalResult> {\r\n    const expireProgram: Program = this.findProgram(progId);\r\n    const result: ModalResult = await this.programsMaintService.maintainProgram('expire', null, expireProgram);\r\n    return result;\r\n  }\r\n\r\n  private async configureProgramClientExceptions(progId): Promise<ModalResult> {\r\n    const program: Program = this.findProgram(progId);\r\n    const result: ModalResult = await this.programClientExcService.configureProgramClientExceptions(program);\r\n    return result;\r\n  }\r\n\r\n  private async configureProgramCommunications(progId): Promise<ModalResult> {\r\n    // invoke service to manage a modal dialog allowing user to\r\n    // configure the program-level communication configurations\r\n    const program: Program = this.findProgram(progId);\r\n    const result: ModalResult = await this.programConfigService.configureProgram(program);\r\n    return result;\r\n  }\r\n\r\n  private findProgram(id): Program {\r\n    return this.programs.find(p => p.id === id);\r\n  }\r\n\r\n  private replaceUpdatedProgram(updatedProgram: Program) {\r\n    // Angular change detection should be taking care of this\r\n    // must be missing something...\r\n    const replaceProgram = this.findProgram(updatedProgram.id);\r\n    // replaceProgram = null;\r\n    replaceProgram.name = updatedProgram.name;\r\n    replaceProgram.description = updatedProgram.description;\r\n    replaceProgram.programProfile = updatedProgram.programProfile;\r\n    replaceProgram.detectChanges = 'edited';\r\n    if (replaceProgram && !replaceProgram.status) {\r\n      replaceProgram.status = new ProgramStatus(replaceProgram);\r\n\r\n    } else {\r\n      replaceProgram.status.update(replaceProgram);\r\n    }\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs.component.ts","// Programs feature Module\r\n//\r\nimport { NgModule  } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { routedComponents,\r\n         ProgramsRoutingModule               } from './programs-routing.module';\r\n\r\nimport { ProgramActionsPopoverComponent      } from './program-actions-popover/program-actions-popover.component';\r\nimport { ProgramStatusComponent              } from './program-status/program-status.component';\r\n\r\nimport { ProgramClientExceptionsModalComponent\r\n                                             } from './services/program-client-exceptions/program-client-exceptions-modal.component';\r\nimport { ProgramClientExceptionsModalService } from './services/program-client-exceptions/program-client-exceptions-modal.service';\r\nimport { ProgramConfigurationsModalComponent } from './services/program-configurations/program-configurations-modal.component';\r\nimport { ProgramConfigurationsModalService   } from './services/program-configurations/program-configurations-modal.service';\r\nimport { ProgramsMaintenanceModalComponent   } from './services/programs-maintenance/programs-maintenance-modal.component';\r\nimport { ProgramsMaintenanceModalService     } from './services/programs-maintenance/programs-maintenance-modal.service';\r\n\r\n// shared\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // CommonModule, // gets provided by shared module\r\n    NgbModule.forRoot(),\r\n    ProgramsRoutingModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    routedComponents,\r\n    ProgramActionsPopoverComponent,\r\n    ProgramClientExceptionsModalComponent,\r\n    ProgramConfigurationsModalComponent,\r\n    ProgramsMaintenanceModalComponent,\r\n    ProgramStatusComponent\r\n  ],\r\n  entryComponents: [\r\n    ProgramClientExceptionsModalComponent,\r\n    ProgramConfigurationsModalComponent,\r\n    ProgramsMaintenanceModalComponent\r\n  ],\r\n  providers: [\r\n    ProgramClientExceptionsModalService,\r\n    ProgramConfigurationsModalService,\r\n    ProgramsMaintenanceModalService,\r\n  ],\r\n})\r\nexport class ProgramsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/programs.module.ts","module.exports = \"<form #programClientExceptionForm=\\\"ngForm\\\" \\r\\n(ngSubmit)=\\\"saveProgramClientExceptions()\\\" >\\r\\n\\r\\n<div class=\\\"modal-header bg-gradient-dark\\\">\\r\\n<h4 class=\\\"modal-title text-white\\\">\\r\\n  Configure Client Exceptions\\r\\n  <small>for ProgramId {{program.id}}: {{program.name}}</small>\\r\\n</h4>\\r\\n<button type=\\\"button\\\" class=\\\"close text-white\\\" aria-label=\\\"Close\\\" (click)=\\\"configureProgramClientExcModal.dismiss('Cross click')\\\">\\r\\n<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <div id=\\\"configuredClients\\\">\\r\\n    <table class=\\\"table table-responsive table-sm table-striped table-bordered table-hover\\\">\\r\\n      <caption></caption>\\r\\n      <thead class=\\\"bg-gradient-light\\\">\\r\\n        <tr>\\r\\n          <th><small>ID</small></th>\\r\\n          <th><small>Code</small></th>\\r\\n          <th><small>Name</small></th>\\r\\n          <th *ngFor=\\\"let ppo of programProfileOptions\\\">\\r\\n            <small title=\\\"{{ppo.title}}\\\">{{ppo.label}}</small>\\r\\n          </th>\\r\\n          <th><small>Effective</small></th>\\r\\n          <th><small>Expiration</small></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let pce of programClientExceptions; let i = index\\\">\\r\\n          <td>\\r\\n              <span *ngIf=\\\"pce.client.id\\\" class=\\\"badge badge-secondary\\\">{{pce.client.id}}</span>\\r\\n          </td>\\r\\n          <td><span >{{pce.client.code}}</span></td>\\r\\n          <td width=\\\"18%\\\"><span >{{pce.client.name}}</span></td>\\r\\n\\r\\n          <td *ngFor=\\\"let ppo of programProfileOptions\\\">\\r\\n            <app-select-profile-option \\r\\n              [name]=\\\"ppo.property\\\" [label]=\\\"ppo.label\\\"\\r\\n              [(ngModel)]=\\\"pce[ppo.property]\\\"\\r\\n              [staticValue]=\\\"pce[ppo.property]\\\"\\r\\n              [showHeader]=\\\"false\\\"\\r\\n              [staticReadOnly]=\\\"i === 0 && !newProgram\\\"\\r\\n              [dynamicPicker]=\\\"i !== 0 || newProgram\\\"\\r\\n              [profileOpts]=\\\"ppo.opts\\\"></app-select-profile-option>\\r\\n          </td>\\r\\n\\r\\n          <td>\\r\\n            <app-date-picker-popup [dateValue]=\\\"pce.effective\\\"\\r\\n              (newDateValue)=\\\"updateDateValue($event, profile, 'effective')\\\"></app-date-picker-popup>    \\r\\n          </td>\\r\\n          <td>\\r\\n            <input class=\\\"form-control form-control-sm date-eff-exp-input\\\" value=\\\"{{pce.expiration}}\\\" readonly>\\r\\n          </td>\\r\\n          \\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n  \\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <div class=\\\"w-100\\\">\\r\\n    <span class=\\\"float-left\\\">Some instructional content or condition message goes here: </span>\\r\\n    <div class=\\\"float-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark\\\" [disabled]=\\\"!programClientExceptionForm.valid\\\">Save</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"configureProgramClientExcModal.close('Close click')\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n</form> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.component.html\n// module id = ../../../../../src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.component.html\n// module chunks = programs.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.component.scss\n// module id = ../../../../../src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.component.scss\n// module chunks = programs.module","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppConstants } from 'app/app-constants';\nimport { Program } from 'app/shared/model/program';\nimport { ProgramProfile } from 'app/shared/model/program-profile';\nimport { ProgramProfileClientException } from 'app/shared/model/program-profile-client-exception';\n\nexport class ProgramClientExceptionsModalResult {\n\n  updateProgramProfileClientException: ProgramProfileClientException;\n  insertProgramProfileClientException: ProgramProfileClientException;\n  updateProgram: Program;\n  insertProgram: Program;\n}\n@Component({\n  selector: 'app-program-client-exceptions-modal',\n  templateUrl: './program-client-exceptions-modal.component.html',\n  styleUrls: ['./program-client-exceptions-modal.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ProgramClientExceptionsModalComponent implements OnInit {\n\n  @Input() configType: string = '';\n  @Input() program: Program = new Program(); // just becasue service inits whenever\n  @Input() programClientExceptions: ProgramProfileClientException[];\n\n  effectiveProfile: ProgramProfile;\n\n  programProfileOptions = AppConstants.PROGRAMPROFILEOPTIONS;\n\n  addProfile: boolean = false;\n  newProgram: boolean = false;\n  expireProgram: boolean = false;\n\n  today = new Date();\n  tomorrow = new Date();\n\n  constructor(\n    private configureProgramClientExcModal: NgbActiveModal\n  ) { }\n\n  ngOnInit() {\n  }\n\n  modalInit() {\n    console.log(this.programClientExceptions);\n  }\n\n  saveProgramClientExceptions() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.component.ts","import { Injectable } from '@angular/core';\n\nimport { NgbModal,\n         ModalDismissReasons,\n         NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppConstants } from 'app/app-constants';\nimport { Program, ProgramStatus } from 'app/shared/model/program';\nimport { ProgramProfileClientException } from 'app/shared/model/program-profile-client-exception';\n\nimport { ProgramClientExceptionsModalComponent,\n         ProgramClientExceptionsModalResult } from './program-client-exceptions-modal.component';\nimport { DataApiService } from 'app/shared/services/data-api.service';\nimport { ModalStaticHelper, ModalResult } from 'app/shared/classes/modal-helpers';\n\nexport { ProgramClientExceptionsModalResult } from './program-client-exceptions-modal.component';\n\n@Injectable()\nexport class ProgramClientExceptionsModalService {\n\n  programProfileClientExceptions: ProgramProfileClientException[];\n  closeResult: string;\n\n  constructor(\n    private dataApiService: DataApiService,\n    private modalService: NgbModal\n  ) { }\n\n  async configureProgramClientExceptions(program: Program): Promise<ModalResult> {\n    const modalResult = new ModalResult();\n\n    const promise = new Promise<ModalResult>((resolve, reject) => {\n      this.configureProgramClientExcModal(program)\n      .then( async (result) => { // hmm, mixed syntax\n        if (result.resultTxt === AppConstants.SAVESUCCESS) {\n          try {\n            // if (program && program.status) {\n            //   program.detectChanges = 'saving';\n            //   program.status.update(program);\n            // }\n            modalResult.modalOutput = await this.fulfillProgramClientExceptionConfiguration(result);\n            modalResult.success = true;\n          } catch (error) {\n            // TODO part of larger error handling effort\n          }\n\n          modalResult.closeResult = `Closed with: ${result.resultTxt}`;\n        } else {\n          modalResult.closeResult = `Closed with: ${result}`;\n        }\n        console.log('maintainProgram', modalResult);\n        resolve(modalResult);\n      }, (reason) => {\n        modalResult.closeResult = `Dismissed ${ModalStaticHelper.getDismissReason(reason)}`;\n        reject(modalResult);\n      }).catch((error) => {\n        console.log('maintainProgram', error);\n        reject(error);\n      });\n    });\n\n    return promise;\n  }\n\n  private async fulfillProgramClientExceptionConfiguration(result): Promise<ProgramClientExceptionsModalResult> {\n    const modalResult: ProgramClientExceptionsModalResult = result.modalResult;\n\n\n    return modalResult;\n  }\n\n  private async configureProgramClientExcModal(program: Program): Promise<any> {\n    const modalOpts: NgbModalOptions = {\n      size: 'lg'\n    };\n    const modalRef = this.modalService.open(ProgramClientExceptionsModalComponent, modalOpts);\n    const modalComp: ProgramClientExceptionsModalComponent  = modalRef.componentInstance;\n\n    modalComp.program = program;\n    modalComp.programClientExceptions = await this.findClientExceptions(program);\n\n    // OnInit has likely fired previously, invoke some initialization code\n    modalComp.modalInit();\n\n    return modalRef.result;\n  }\n\n  // async configureProgramClientExcModalOld(program: Program) {\n  //   const modalOpts: NgbModalOptions = {\n  //     size: 'lg'\n  //   };\n  //   const modalRef = this.modalService.open(ProgramClientExceptionsModalComponent, modalOpts);\n  //   const modalComp: ProgramClientExceptionsModalComponent  = modalRef.componentInstance;\n\n  //   modalComp.program = program;\n  //   modalComp.programClientExceptions = await this.findClientExceptions(program);\n\n  //   modalComp.modalInit();\n\n  //   modalRef.result.then( async (result) => {\n  //     if (result.resultTxt === AppConstants.SAVESUCCESS) {\n\n  //     }\n  //   }, (reason) => {\n  //     this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n  //     // this.setClickedRow(null);\n  //     console.log('configureProgramModal result: ', this.closeResult);\n  //     return this.closeResult;\n  //   });\n  // }\n\n  private async findClientExceptions(program: Program) {\n    // TODO well, here's where we want to go get one at a time or\n    // a query that gets them by program id in the API...\n    await this.getProgramProfileClientExceptions();\n    return this.programProfileClientExceptions.filter(ppce => ppce.program === program.id);\n  }\n\n  private async getProgramProfileClientExceptions() {\n    try {\n      this.programProfileClientExceptions = await this.dataApiService.getProgramProfileClientExceptions();\n      // return this.programProfileClientExceptions;\n    } catch (error) {\n      console.log('getPrograms error: ', error);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-client-exceptions/program-client-exceptions-modal.service.ts","module.exports = \"<form #programConfigurationForm=\\\"ngForm\\\" \\r\\n(ngSubmit)=\\\"saveProgramConfiguration()\\\" >\\r\\n\\r\\n  <div class=\\\"modal-header bg-gradient-dark\\\">\\r\\n    <h4 class=\\\"modal-title text-white\\\">\\r\\n      Configure Communication(s)\\r\\n      <small>for ProgramId {{program.id}}: {{program.name}}</small>\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close text-white\\\" aria-label=\\\"Close\\\" (click)=\\\"configureProgramModal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n    \\r\\n  <div class=\\\"modal-body\\\">\\r\\n      <div id=\\\"configuredPrograms\\\">\\r\\n  \\r\\n        <table class=\\\"table table-responsive table-sm table-striped table-bordered table-hover\\\">\\r\\n          <caption></caption>\\r\\n          <thead class=\\\"bg-gradient-dark text-white\\\">\\r\\n            <tr>\\r\\n              <th>ID</th>\\r\\n              <th>N<small>ame</small></th>\\r\\n              <th>E<small>mail</small></th>\\r\\n              <th>IVR</th>\\r\\n              <th>SMS</th>\\r\\n              <th>M<small>ail</small></th>\\r\\n              <th>M<small>obile</small></th>\\r\\n              <th>D<small>efault</small></th>\\r\\n              <th>E<small>ffective</small></th>\\r\\n              <th>E<small>xpiration</small></th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr appDroppable *ngFor=\\\"let cc of programConfigurations; let i = index\\\"\\r\\n                [dragOverClass]=\\\"'drag-target-border'\\\" [dragHintClass]=\\\"'drag-hint'\\\"\\r\\n                [dropEnabled]=\\\"i === lastProgramConfigRow && !cc.communication.id\\\"\\r\\n                \\r\\n                (onDrop)=\\\"communicationDrop($event)\\\"\\r\\n                [class.table-info]=\\\"i == lastProgramConfigRow\\\"> \\r\\n              \\r\\n              <td>\\r\\n                <span *ngIf=\\\"i !== lastProgramConfigRow\\\" class=\\\"badge badge-secondary\\\">{{cc.communication.id}}</span>\\r\\n                <span *ngIf=\\\"i === lastProgramConfigRow && !cc.communication.id\\\">\\r\\n                  <i class=\\\"fa fa-file-o clickable\\\" aria-hidden=\\\"true\\\" \\r\\n                      title=\\\"Pick Communication to configure for {{program.name}}\\\"></i></span>\\r\\n                <span *ngIf=\\\"i === lastProgramConfigRow && cc.communication.id\\\" class=\\\"badge badge-primary\\\">{{cc.communication.id}}</span>\\r\\n              </td>\\r\\n              <td width=\\\"20%\\\"><small>{{cc.communication.name}}</small></td>\\r\\n              <td><app-select-channel-priority \\r\\n                    id=\\\"chanEmailPriority\\\" name=\\\"chanEmailPriority\\\" \\r\\n                    [(ngModel)]=\\\"cc.chanEmailPriority\\\"\\r\\n                    [actualStaticValue]=\\\"cc.chanEmailPriority\\\"\\r\\n                    [lastConfigRow]=\\\"i === lastProgramConfigRow\\\" ></app-select-channel-priority></td>\\r\\n              <td><app-select-channel-priority \\r\\n                    id=\\\"chanIvrPriority\\\" name=\\\"chanIvrPriority\\\" \\r\\n                    [(ngModel)]=\\\"cc.chanIvrPriority\\\"\\r\\n                    [actualStaticValue]=\\\"cc.chanIvrPriority\\\"\\r\\n                    [lastConfigRow]=\\\"i === lastProgramConfigRow\\\" ></app-select-channel-priority></td>\\r\\n              <td><app-select-channel-priority \\r\\n                    id=\\\"chanSmsPriority\\\" name=\\\"chanSmsPriority\\\" \\r\\n                    [(ngModel)]=\\\"cc.chanSmsPriority\\\"\\r\\n                    [actualStaticValue]=\\\"cc.chanSmsPriority\\\"\\r\\n                    [lastConfigRow]=\\\"i === lastProgramConfigRow\\\" ></app-select-channel-priority></td>  \\r\\n              <td><app-select-channel-priority \\r\\n                    id=\\\"chanMailPriority\\\" name=\\\"chanMailPriority\\\" \\r\\n                    [(ngModel)]=\\\"cc.chanMailPriority\\\"\\r\\n                    [actualStaticValue]=\\\"cc.chanMailPriority\\\"\\r\\n                    [lastConfigRow]=\\\"i === lastProgramConfigRow\\\" ></app-select-channel-priority></td> \\r\\n              <td><app-select-channel-priority \\r\\n                    id=\\\"chanMobilePriority\\\" name=\\\"chanMobilePriority\\\" \\r\\n                    [(ngModel)]=\\\"cc.chanMobilePriority\\\"\\r\\n                    [actualStaticValue]=\\\"cc.chanMobilePriority\\\"\\r\\n                    [lastConfigRow]=\\\"i === lastProgramConfigRow\\\" ></app-select-channel-priority></td> \\r\\n              <td><app-select-channel-default\\r\\n                    id=\\\"chanDefault\\\" name=\\\"chanDefault\\\" \\r\\n                    [(ngModel)]=\\\"cc.chanDefault\\\"\\r\\n                    [actualStaticValue]=\\\"cc.chanDefault\\\"\\r\\n                    [lastConfigRow]=\\\"i === lastProgramConfigRow\\\" ></app-select-channel-default></td>\\r\\n              <td><app-date-eff-exp\\r\\n                    dateType=\\\"effective\\\" [commConfig]=\\\"cc\\\"\\r\\n                    [lastConfigRow]=\\\"i === lastProgramConfigRow\\\"\\r\\n                    (newDateValue)=\\\"updateDateValue($event, cc, 'effective')\\\"></app-date-eff-exp></td>\\r\\n              <td><app-date-eff-exp\\r\\n                    dateType=\\\"expiration\\\" [commConfig]=\\\"cc\\\"\\r\\n                    [lastConfigRow]=\\\"i === lastProgramConfigRow\\\"\\r\\n                    (newDateValue)=\\\"updateDateValue($event, cc, 'expiration')\\\"></app-date-eff-exp></td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"configureState === 'start' || configureState === 'continue'\\\">\\r\\n              <td>\\r\\n                <i class=\\\"fa fa-plus-square-o clickable\\\" aria-hidden=\\\"true\\\" \\r\\n                  (click)=\\\"addProgramConfig()\\\" title=\\\"Add New Communication to {{program.name}} Configurations\\\"></i>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n  \\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n  \\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <div class=\\\"w-100\\\">\\r\\n      <span class=\\\"float-left\\\">Some instructional content or condition message goes here: </span>\\r\\n      <div class=\\\"float-right\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark\\\" [disabled]=\\\"!programConfigurationForm.valid\\\">Save</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"configureProgramModal.close('Close click')\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n      <div class=\\\"w-100\\\">\\r\\n        <app-comm-action-table *ngIf=\\\"configureState === 'pick' || configureState === 'continue'\\\" \\r\\n          [configureState]=\\\"configureState\\\"\\r\\n          [communications]=\\\"communications\\\"\\r\\n          [displayComm]=\\\"displayComm\\\"\\r\\n          [supressComm]=\\\"supressComm\\\"\\r\\n          [displayCommStartEmpty]=\\\"true\\\"\\r\\n          [displayProgram]=\\\"program.name\\\"\\r\\n          [showCommId]=\\\"true\\\"\\r\\n          [showCommName]=\\\"true\\\"\\r\\n          [showCommDesc]=\\\"true\\\"\\r\\n          [showStatus]=\\\"false\\\"\\r\\n          [showAction]=\\\"false\\\"\\r\\n          (selRowOut)=\\\"setClickedRow($event)\\\"\\r\\n          (selectedCommunication)=\\\"addProgramConfig($event)\\\"\\r\\n          (commConfigAction)=\\\"configureCommunication($event)\\\">\\r\\n        </app-comm-action-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n</form>   \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-configurations/program-configurations-modal.component.html\n// module id = ../../../../../src/app/programs/services/program-configurations/program-configurations-modal.component.html\n// module chunks = programs.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-configurations/program-configurations-modal.component.scss\n// module id = ../../../../../src/app/programs/services/program-configurations/program-configurations-modal.component.scss\n// module chunks = programs.module","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Communication } from 'app/shared/model/communication';\r\nimport { Program } from 'app/shared/model/program';\r\nimport { ProgramConfiguration } from 'app/shared/model/program-configuration';\r\n//\r\nexport class ProgramConfigModalResult {\r\n  newProgramConfigs: ProgramConfiguration[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-program-configurations-modal',\r\n  templateUrl: './program-configurations-modal.component.html',\r\n  styleUrls: ['./program-configurations-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProgramConfigurationsModalComponent implements OnInit {\r\n\r\n  @Input() communications: Communication[];\r\n  @Input() program: Program = new Program(); // just becasue service inits whenever\r\n  @Input() programConfigurations: ProgramConfiguration[] = [] ;\r\n\r\n  displayComm: Communication[];\r\n  displayCommStartEmpty: boolean;\r\n  supressComm: number[];\r\n\r\n  newProgramConfig: ProgramConfiguration;\r\n  prevProgramConfig: ProgramConfiguration;\r\n  newProgramConfigs: ProgramConfiguration[];\r\n\r\n  lastProgramConfigRow: number;\r\n  configureState: 'start' | 'pick' | 'continue' | 'configure' | 'save';\r\n\r\n  programDropEnabled: boolean = false;\r\n\r\n  selectedRow: number;\r\n\r\n  today = new Date();\r\n  tomorrow = new Date();\r\n\r\n  constructor(\r\n    // private dataApiService: DataApiService,\r\n    private configureProgramModal: NgbActiveModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  modalInit() {\r\n    console.log('ProgramConfigByCommComponent init: ');\r\n    console.log(this.program);\r\n    // console.log(this.programConfigurations);\r\n    // get the list of programs to populate the dropdown (covered in @Input() programs: Program[];)\r\n    // check if there are progConfig already (for now just checking for first one, have to check for eff dates)\r\n    this.displayCommStartEmpty = true;\r\n    this.displayComm = [];\r\n    this.newProgramConfigs = [];\r\n    this.tomorrow.setDate(this.today.getDate() + 1);\r\n    this.configureState = 'start';\r\n\r\n    this.supressComm = this.findExistingConfiguredComms();\r\n  }\r\n\r\n  private addProgramConfig(communication?: Communication) {\r\n\r\n    if (this.newProgramConfig && this.configureState === 'pick') {\r\n      this.newProgramConfig.communication = communication;\r\n      // this.newProgramConfigs[this.newProgramConfigs.length] = this.newProgramConfig;\r\n      this.supressComm.push(communication.id);\r\n      // this.configureState = 'continue';\r\n      // this.newProgramConfig = null;\r\n      this.programDropEnabled = false;\r\n    }\r\n\r\n    if (this.configureState === 'start' || this.configureState === 'continue') {\r\n      // first time through\r\n      this.lastProgramConfigRow = this.programConfigurations.length;\r\n      if (this.lastProgramConfigRow === 0) {\r\n        this.newProgramConfig = new ProgramConfiguration();\r\n        this.newProgramConfig.effective =  // TODO shared util method\r\n            this.tomorrow.getFullYear() + '-' +\r\n          (this.tomorrow.getMonth() + 1) + '-' +\r\n            this.tomorrow.getDate();\r\n      } else {\r\n        // clone setting from previous config row\r\n        this.prevProgramConfig = this.programConfigurations[this.lastProgramConfigRow - 1];\r\n        this.newProgramConfig = new ProgramConfiguration(this.prevProgramConfig);\r\n        this.newProgramConfig.effective = this.prevProgramConfig.effective;\r\n      }\r\n      this.programConfigurations[this.programConfigurations.length] = this.newProgramConfig;\r\n      this.newProgramConfigs[this.newProgramConfigs.length] = this.newProgramConfig;\r\n      this.newProgramConfig.expiration = AppConstants.UNEXPIRED;\r\n      this.newProgramConfig.program = this.program;\r\n\r\n      this.newProgramConfig.communication = new Communication();\r\n\r\n      this.configureState = 'pick';\r\n      this.programDropEnabled = true;\r\n    } else {\r\n      if (this.newProgramConfig && this.configureState === 'pick') {\r\n        this.configureState = 'continue';\r\n      }\r\n    }\r\n  }\r\n\r\n  private communicationDrop(dragEvent) {\r\n    console.log('ProgramConfigComponent communicationDrop: ', dragEvent);\r\n    if (dragEvent.dragData && typeof(dragEvent.dragData.id) === 'number' ) {\r\n      this.addProgramConfig(this.findCommunication(dragEvent.dragData.id));\r\n    }\r\n  }\r\n\r\n  private findCommunication(id): Communication {\r\n    return this.communications.find(c => c.id === id);\r\n  }\r\n\r\n  private findExistingConfiguredComms(): number[] {\r\n    const existing: number[] = [];\r\n    for (let i = 0; i < this.programConfigurations.length; i++) {\r\n      existing.push(this.programConfigurations[i].communication.id);\r\n    }\r\n    return existing;\r\n  }\r\n\r\n  private saveProgramConfiguration() {\r\n    console.log('ProgramConfigComponent save');\r\n    console.log(this.newProgramConfig, ' program id: ', this.program);\r\n\r\n    const modalResult: ProgramConfigModalResult = {\r\n      newProgramConfigs: this.newProgramConfigs\r\n    };\r\n\r\n    this.configureProgramModal.close({resultTxt: AppConstants.SAVESUCCESS, modalResult: modalResult});\r\n  }\r\n\r\n  private updateDateValue(newDateValue, pc: ProgramConfiguration, dateType: string) {\r\n    console.log('ProgramConfigByCommComponent updateDateValue: ', newDateValue, pc, dateType);\r\n    if (dateType === 'effective') {\r\n      pc.effective = newDateValue;\r\n    }\r\n    if (dateType === 'expiration') {\r\n      pc.expiration = newDateValue;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-configurations/program-configurations-modal.component.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { NgbModal,\r\n         ModalDismissReasons,\r\n         NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Communication } from 'app/shared/model/communication';\r\nimport { Program } from 'app/shared/model/program';\r\nimport { ProgramConfiguration } from 'app/shared/model/program-configuration';\r\n\r\nimport { ProgramConfigurationsModalComponent,\r\n         ProgramConfigModalResult } from './program-configurations-modal.component';\r\nimport { DataApiService } from 'app/shared/services/data-api.service';\r\nimport { ModalStaticHelper, ModalResult } from 'app/shared/classes/modal-helpers';\r\n\r\nexport { ProgramConfigModalResult } from './program-configurations-modal.component';\r\n\r\n@Injectable()\r\nexport class ProgramConfigurationsModalService {\r\n\r\n  communications: Communication[];\r\n  // program: Program;\r\n  // programs: Program[];\r\n  programConfigurations: ProgramConfiguration[];\r\n\r\n  closeResult: string;\r\n\r\n  constructor(\r\n    private dataApiService: DataApiService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  public async configureProgram(program: Program): Promise<ModalResult> {\r\n    const modalResult = new ModalResult();\r\n\r\n    const promise = new Promise<ModalResult>((resolve, reject) => {\r\n      this.configureProgramModal(program)\r\n      .then( async (result) => { // hmm, mixed syntax\r\n        if (result.resultTxt === AppConstants.SAVESUCCESS) {\r\n          try {\r\n            // if (program && program.status) {\r\n            //   program.detectChanges = 'saving';\r\n            //   program.status.update(program);\r\n            // }\r\n            modalResult.modalOutput = await this.fulfillProgramConfiguration(result);\r\n            modalResult.success = true;\r\n          } catch (error) {\r\n            // TODO part of larger error handling effort\r\n          }\r\n\r\n          modalResult.closeResult = `Closed with: ${result.resultTxt}`;\r\n        } else {\r\n          modalResult.closeResult = `Closed with: ${result}`;\r\n        }\r\n        console.log('maintainProgram', modalResult);\r\n        resolve(modalResult);\r\n      }, (reason) => {\r\n        modalResult.closeResult = `Dismissed ${ModalStaticHelper.getDismissReason(reason)}`;\r\n        reject(modalResult);\r\n      }).catch((error) => {\r\n        console.log('maintainProgram', error);\r\n        reject(error);\r\n      });\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  private async fulfillProgramConfiguration(result): Promise<ProgramConfigModalResult> {\r\n    const modalResult: ProgramConfigModalResult = result.modalResult;\r\n\r\n    if (modalResult.newProgramConfigs) {\r\n      for (let i = 0; i < modalResult.newProgramConfigs.length; i++) {\r\n        await this.addProgramConfiguration(modalResult.newProgramConfigs[i]);\r\n      }\r\n    } else {\r\n      // TODO this would be some kind of exception\r\n      console.log('ProgramConfigurationsModalService fulfillProgramConfiguration bad result: ', result.modalResult);\r\n    }\r\n\r\n    return modalResult;\r\n  }\r\n\r\n  private async addProgramConfiguration(programConfiguration: ProgramConfiguration): Promise<void> {\r\n    try {\r\n      await this.dataApiService.createProgramConfiguration(programConfiguration);\r\n    } catch (error) {\r\n      console.log('addProgramConfiguration error: ', error);\r\n    }\r\n  }\r\n\r\n  private async configureProgramModal(program: Program) {\r\n    const modalOpts: NgbModalOptions = {\r\n      size: 'lg'\r\n    };\r\n    const modalRef = this.modalService.open(ProgramConfigurationsModalComponent, modalOpts);\r\n    const modalComp: ProgramConfigurationsModalComponent  = modalRef.componentInstance;\r\n\r\n    this.communications = await this.getCommunications();\r\n    this.programConfigurations = await this.getProgramConfigurations();\r\n\r\n    modalComp.communications = this.communications;\r\n    modalComp.program = program;\r\n    modalComp.programConfigurations = await this.findProgramConfigurations(program);\r\n\r\n    // OnInit has likely fired previously, invoke some initialization code\r\n    modalComp.modalInit();\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n  private async getCommunications(): Promise<Communication[]> {\r\n    try {\r\n      return await this.dataApiService.getCommunications();\r\n    } catch (error) {\r\n      console.log('getCommunications error: ', error);\r\n    }\r\n  }\r\n\r\n  private async findProgramConfigurations(selectedProgram: Program): Promise<ProgramConfiguration[]> {\r\n\r\n    return this.programConfigurations.filter(pc => {\r\n      if (typeof(pc.program) === 'number') {\r\n        if (pc.program === selectedProgram.id) {\r\n          pc.program = selectedProgram;\r\n          if (typeof(pc.communication) === 'number') {\r\n            pc.communication = this.findCommunication(<number>pc.communication);\r\n          }\r\n          return true;\r\n        } else { return false; }\r\n      } else if (pc.program.id === selectedProgram.id) {\r\n        if (typeof(pc.communication) === 'number') {\r\n          pc.communication = this.findCommunication(<number>pc.communication);\r\n        }\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  private async getProgramConfigurations(): Promise<ProgramConfiguration[]> {\r\n    try {\r\n       return await this.dataApiService.getProgramConfigurations();\r\n    } catch (error) {\r\n      console.log('getProgramConfigurations error: ', error);\r\n    }\r\n  }\r\n\r\n  private findCommunication(id: number): Communication {\r\n    return this.communications.find(c => c.id === id);\r\n  }\r\n\r\n\r\n\r\n  // async configureProgramModalOld(program: Program) {\r\n  //   const modalOpts: NgbModalOptions = {\r\n  //     size: 'lg'\r\n  //   };\r\n  //   const modalRef = this.modalService.open(ProgramConfigurationsModalComponent, modalOpts);\r\n  //   const modalComp: ProgramConfigurationsModalComponent  = modalRef.componentInstance;\r\n\r\n  //   modalComp.communications = await this.getCommunications();\r\n  //   modalComp.program = program;\r\n  //   modalComp.programConfigurations = await this.findProgramConfigurations(program);\r\n  //   modalComp.modalInit();\r\n\r\n  //   modalRef.result.then((result) => {\r\n  //     if (result.resultTxt === AppConstants.SAVESUCCESS) {\r\n  //       console.log('configureProgramModal result: ', result.modalResult);\r\n  //       this.closeResult = `Closed with: ${result.resultTxt}`;\r\n  //       if (result.modalResult) {\r\n  //         const modalResult: ProgramConfigModalResult = result.modalResult;\r\n  //         // if (modalResult.prevProgConfig) {\r\n  //         //   this.updateProgramConfiguration(modalResult.prevProgConfig);\r\n  //         // }\r\n  //         if (modalResult.newProgramConfigs) {\r\n  //           for (let i = 0; i < modalResult.newProgramConfigs.length; i++) {\r\n  //             this.addProgramConfiguration(modalResult.newProgramConfigs[i]);\r\n  //           }\r\n  //         }\r\n  //       } else {\r\n  //         // this would be some kind of exception\r\n  //         console.log('CommunicationComponent configureProgramModal bad result: ', result.modalResult);\r\n  //       }\r\n  //     } else {\r\n  //       this.closeResult = `Closed with: ${result}`;\r\n  //     }\r\n  //     // this.setClickedRow(null);\r\n  //     console.log('configureProgramModal result: ', this.closeResult);\r\n  //   }, (reason) => {\r\n  //     this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n  //     // this.setClickedRow(null);\r\n  //     console.log('configureProgramModal result: ', this.closeResult);\r\n  //   });\r\n  // }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/program-configurations/program-configurations-modal.service.ts","module.exports = \"<form #programMaintenanceForm=\\\"ngForm\\\" \\r\\n      (ngSubmit)=\\\"saveProgram()\\\" >\\r\\n\\r\\n  <div class=\\\"modal-header bg-gradient-dark\\\">\\r\\n    <h4 class=\\\"modal-title text-white\\\">\\r\\n      <span *ngIf=\\\"configType === 'edit'\\\">\\r\\n        Edit Program <small>{{program.name}} (ProgramId: {{program.id}}) profile</small></span>\\r\\n      <span *ngIf=\\\"configType === 'add'\\\">\\r\\n        Add New Program</span>\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close text-white\\\" aria-label=\\\"Close\\\" (click)=\\\"maintainProgramModal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n    \\r\\n  <div class=\\\"modal-body\\\">\\r\\n\\r\\n    <table class=\\\"table table-responsive table-sm table-striped table-bordered table-hover\\\">\\r\\n      <caption></caption>\\r\\n      <thead class=\\\"bg-gradient-light\\\">\\r\\n        <tr>\\r\\n          <th width=\\\"20%\\\">Program Name</th>\\r\\n          <th width=\\\"80%\\\">Program Description</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td class=\\\"form-group\\\">\\r\\n\\r\\n              <label for=\\\"programName\\\" class=\\\"text-white bg-gradient-dark flex-justify-left rounded sr-only\\\">\\r\\n                Program Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"programForForm.name\\\" id=\\\"programName\\\" name=\\\"name\\\" required\\r\\n                      aria-describedby=\\\"programNameHelp\\\" placeholder=\\\"Enter Program Name\\\">\\r\\n              <small id=\\\"programNameHelp\\\" class=\\\"form-text text-muted\\\">Short Name of the Program.</small>\\r\\n\\r\\n          </td>\\r\\n          <td class=\\\"form-group\\\">\\r\\n\\r\\n              <label for=\\\"programDescription\\\" class=\\\"text-white bg-gradient-dark flex-justify-left rounded sr-only\\\">\\r\\n                Program Description</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" \\r\\n                      [(ngModel)]=\\\"programForForm.description\\\" id=\\\"programDescription\\\" name=\\\"description\\\" required\\r\\n                      aria-describedby=\\\"programDescriptionHelp\\\" placeholder=\\\"Enter Program Description\\\">\\r\\n              <small id=\\\"programDescriptionHelp\\\" class=\\\"form-text text-muted\\\">Brief Description of the Program.</small>\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n    <table *ngIf=\\\"programProfiles\\\" class=\\\"table table-responsive table-sm table-striped table-bordered table-hover\\\">\\r\\n      <caption></caption>\\r\\n      <thead class=\\\"bg-gradient-light\\\">\\r\\n        <tr>\\r\\n          <th *ngFor=\\\"let ppo of programProfileOptions\\\">\\r\\n            <small title=\\\"{{ppo.title}}\\\">{{ppo.label}}</small>\\r\\n          </th>\\r\\n          <th><small>Effective</small></th>\\r\\n          <th><small>Expiration</small></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let profile of programProfiles; let i = index\\\">\\r\\n          <td *ngFor=\\\"let ppo of programProfileOptions\\\">\\r\\n\\r\\n            <app-select-profile-option \\r\\n              [name]=\\\"ppo.property\\\" [label]=\\\"ppo.label\\\"\\r\\n              [(ngModel)]=\\\"profile[ppo.property]\\\"\\r\\n              [staticValue]=\\\"profile[ppo.property]\\\"\\r\\n              [showHeader]=\\\"false\\\"\\r\\n              [staticReadOnly]=\\\"i === 0 && !newProgram\\\"\\r\\n              [dynamicPicker]=\\\"i !== 0 || newProgram\\\"\\r\\n              [profileOpts]=\\\"ppo.opts\\\"></app-select-profile-option>\\r\\n          </td>\\r\\n          <td><!--TODO move these to a common component -->\\r\\n              <span *ngIf=\\\"i === 0 && !newProgram\\\">\\r\\n                  <label for=\\\"effective\\\" class=\\\"text-white bg-gradient-dark flex-justify-center rounded sr-only\\\">\\r\\n                      Effective</label>\\r\\n                  <!-- the effective date of the current effective row -->\\r\\n                  <input class=\\\"form-control form-control-sm date-eff-exp-input\\\" value=\\\"{{profile.effective}}\\\" readonly>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"newProgram || i !== 0\\\">\\r\\n                  <label for=\\\"effective\\\" class=\\\"text-white bg-gradient-dark flex-justify-center rounded sr-only\\\">\\r\\n                    Effective</label>\\r\\n                  <!-- set the effective date for the new row -->\\r\\n                  <app-date-picker-popup [dateValue]=\\\"profile.effective\\\"\\r\\n                    (newDateValue)=\\\"updateDateValue($event, profile, 'effective')\\\"></app-date-picker-popup>           \\r\\n                </span>\\r\\n          </td>\\r\\n          <td>\\r\\n              <span *ngIf=\\\"i === 0 && expireProgram\\\">\\r\\n                  <label for=\\\"expiration\\\" class=\\\"text-white bg-gradient-dark flex-justify-center rounded sr-only\\\">\\r\\n                    Expiration</label>\\r\\n                  <!-- the expiration date of the current/previous row -->\\r\\n                  <app-date-picker-popup [dateValue]=\\\"profile.expiration\\\"\\r\\n                    (newDateValue)=\\\"updateDateValue($event, profile, 'expiration')\\\"></app-date-picker-popup> \\r\\n                </span>\\r\\n                <span *ngIf=\\\"i === 0 && !expireProgram\\\">\\r\\n                  <label for=\\\"expiration\\\" class=\\\"text-white bg-gradient-dark flex-justify-center rounded sr-only\\\">\\r\\n                    Expiration</label>\\r\\n                  <!-- the expiration date of the current/previous row -->\\r\\n                  <input class=\\\"form-control form-control-sm date-eff-exp-input\\\" value=\\\"{{profile.expiration}}\\\" readonly\\r\\n                    (click)=\\\"changeProfile(profile)\\\" >\\r\\n                </span>\\r\\n                <span *ngIf=\\\"i !== 0\\\">\\r\\n                  <label for=\\\"expiration\\\" class=\\\"text-white bg-gradient-dark flex-justify-center rounded sr-only\\\">\\r\\n                    Expiration</label>\\r\\n                  <!-- the expiration date of the current/previous row -->\\r\\n                  <input class=\\\"form-control form-control-sm date-eff-exp-input\\\" value=\\\"{{profile.expiration}}\\\" readonly>\\r\\n                </span>\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n        <tr *ngIf=\\\"addProfile\\\">\\r\\n          <td colspan=\\\"10\\\">\\r\\n              <i class=\\\"fa fa-plus-square-o clickable\\\" aria-hidden=\\\"true\\\" \\r\\n                (click)=\\\"changeProfile(profile)\\\" title=\\\"Modify Program Profile\\\"></i>\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n  </div>\\r\\n    \\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <div class=\\\"w-100\\\">\\r\\n      <span class=\\\"float-left\\\">Some instructional content or condition message goes here: </span>\\r\\n      <div class=\\\"float-right\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark\\\" [disabled]=\\\"!programMaintenanceForm.valid\\\">Save</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"maintainProgramModal.close('Close click')\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</form>      \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/programs-maintenance/programs-maintenance-modal.component.html\n// module id = ../../../../../src/app/programs/services/programs-maintenance/programs-maintenance-modal.component.html\n// module chunks = programs.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".flex-justify-left {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: start;\\n      -ms-flex-pack: start;\\n          justify-content: flex-start;\\n  -webkit-box-align: left;\\n      -ms-flex-align: left;\\n          align-items: left;\\n  padding: 0 0 0 10px; }\\n\\n.flex-justify-center {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; }\\n\\n.flex-justify-right {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end;\\n  -webkit-box-align: right;\\n      -ms-flex-align: right;\\n          align-items: right; }\\n\\n.date-eff-exp-input {\\n  width: 80px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/programs-maintenance/programs-maintenance-modal.component.scss\n// module id = ../../../../../src/app/programs/services/programs-maintenance/programs-maintenance-modal.component.scss\n// module chunks = programs.module","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Program } from 'app/shared/model/program';\r\nimport { ProgramProfile } from 'app/shared/model/program-profile';\r\n\r\nexport class ProgramsMaintModalResult {\r\n  updateProgramProfile: ProgramProfile;\r\n  insertProgramProfile: ProgramProfile;\r\n  updateProgram: Program;\r\n  insertProgram: Program;\r\n  resultProgram: Program;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-programs-maintenance-modal',\r\n  templateUrl: './programs-maintenance-modal.component.html',\r\n  styleUrls: ['./programs-maintenance-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProgramsMaintenanceModalComponent implements OnInit {\r\n\r\n  @Input() configType: string = '';\r\n  @Input() program: Program = new Program();\r\n  @Input() programForForm: Program = new Program(); // just becasue service inits whenever\r\n  @Input() programProfiles: ProgramProfile[] = [];\r\n\r\n  effectiveProfile: ProgramProfile;\r\n\r\n  programProfileOptions = AppConstants.PROGRAMPROFILEOPTIONS;\r\n\r\n  addProfile: boolean = false;\r\n  newProgram: boolean = false;\r\n  expireProgram: boolean = false;\r\n\r\n  today = new Date();\r\n  tomorrow = new Date();\r\n\r\n\r\n  constructor(\r\n    private maintainProgramModal: NgbActiveModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  modalInit() {\r\n    console.log('ProgramsMaintenanceModalComponent init: ');\r\n    console.log(this.programForForm);\r\n\r\n    this.tomorrow.setDate(this.today.getDate() + 1);\r\n\r\n    if (this.configType === 'add') {\r\n      this.programProfiles = [new ProgramProfile(this.programForForm.id)];\r\n\r\n      this.programProfiles[0].effective =\r\n        this.tomorrow.getFullYear() + '-' +\r\n       (this.tomorrow.getMonth() + 1) + '-' +\r\n        this.tomorrow.getDate();\r\n      this.programProfiles[0].expiration = AppConstants.UNEXPIRED;\r\n      this.newProgram = true;\r\n    }\r\n\r\n    if (this.configType === 'edit') {\r\n      // editing a program actually means creating a new row from\r\n      // the current row, setting expiration on current\r\n      // show only the current effective Profile row\r\n      this.programProfiles = [];\r\n      const currentEffectiveProfile: ProgramProfile = this.getCurrentEffectiveProfile(this.programForForm)[0];\r\n      this.effectiveProfile = new ProgramProfile(this.programForForm.id, currentEffectiveProfile, true);\r\n      this.programProfiles = [this.effectiveProfile];\r\n      this.addProfile = true;\r\n    }\r\n\r\n    if (this.configType === 'expire') {\r\n      this.programProfiles = [];\r\n      const currentEffectiveProfile: ProgramProfile = this.getCurrentEffectiveProfile(this.programForForm)[0];\r\n      this.programProfiles = [new ProgramProfile(this.programForForm.id, currentEffectiveProfile, true)];\r\n      this.programProfiles[0].expiration =\r\n        this.tomorrow.getFullYear() + '-' +\r\n       (this.tomorrow.getMonth() + 1) + '-' +\r\n        this.tomorrow.getDate();\r\n      this.expireProgram = true;\r\n    }\r\n\r\n  }\r\n\r\n  getCurrentEffectiveProfile(program): ProgramProfile[] {\r\n    return program.programProfile.filter(pp => {\r\n      if ( pp.expiration === AppConstants.UNEXPIRED) {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  changeProfile(currProfile: ProgramProfile) {\r\n    // somehow this is coming in null from template?\r\n    if (!currProfile) {\r\n      currProfile = this.effectiveProfile;\r\n    }\r\n    if (this.addProfile) {\r\n      // expire the current profile row\r\n      currProfile.expiration = // TODO shared util method\r\n        this.today.getFullYear() + '-' +\r\n       (this.today.getMonth() + 1) + '-' +\r\n        this.today.getDate();\r\n\r\n      // insert a new profile row with tommorow effective\r\n      const newProfile = new ProgramProfile(this.programForForm.id, currProfile);\r\n\r\n      newProfile.effective = // TODO shared util method\r\n        this.tomorrow.getFullYear() + '-' +\r\n       (this.tomorrow.getMonth() + 1) + '-' +\r\n        this.tomorrow.getDate();\r\n\r\n      newProfile.expiration = AppConstants.UNEXPIRED;\r\n      this.programProfiles.push(newProfile);\r\n    }\r\n\r\n    this.addProfile = false;\r\n  }\r\n\r\n  saveProgram() {\r\n    const modalResult: ProgramsMaintModalResult = new ProgramsMaintModalResult();\r\n\r\n    if (this.configType === 'add') {\r\n      if (this.programProfiles.length === 1 &&\r\n          this.programProfiles[0].expiration === AppConstants.UNEXPIRED) {\r\n        modalResult.insertProgramProfile = this.programProfiles[0];\r\n      }\r\n      modalResult.insertProgram = this.programForForm;\r\n    }\r\n\r\n    if (this.configType === 'edit') {\r\n      modalResult.updateProgram = this.programForForm;\r\n      if (this.programProfiles.length === 2) {\r\n        if (this.programProfiles[0].expiration !== AppConstants.UNEXPIRED) {\r\n           modalResult.updateProgramProfile = this.programProfiles[0];\r\n        } // else something went wrong, report error, abort save\r\n        if (this.programProfiles[1].expiration === AppConstants.UNEXPIRED) {\r\n           modalResult.insertProgramProfile = this.programProfiles[1];\r\n        } // else something went wrong, report error, abort save\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (this.configType === 'expire') {\r\n      modalResult.updateProgram = this.programForForm;\r\n      if (this.programProfiles.length === 1 &&\r\n        this.programProfiles[0].expiration !== AppConstants.UNEXPIRED) {\r\n        modalResult.updateProgramProfile = this.programProfiles[0];\r\n      } // else something went wrong, report error, abort save\r\n\r\n    }\r\n\r\n    this.maintainProgramModal.close({resultTxt: AppConstants.SAVESUCCESS, modalResult: modalResult});\r\n  }\r\n\r\n  private updateDateValue(newDate, pp: ProgramProfile, dateType: string) {\r\n    console.log('ProgramsMaintenanceModalComponent updateDateValue: ', newDate, pp, dateType);\r\n    if (dateType === 'effective') {\r\n      pp.effective = newDate.newDateValue;\r\n      // TODO adjust the expiration date of previous row if applicable\r\n    }\r\n    if (dateType === 'expiration') {\r\n      pp.expiration = newDate.newDateValue;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/programs-maintenance/programs-maintenance-modal.component.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { NgbModal,\r\n         ModalDismissReasons,\r\n         NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Program, ProgramStatus } from 'app/shared/model/program';\r\nimport { ProgramProfile } from 'app/shared/model/program-profile';\r\n\r\nimport { ProgramsMaintenanceModalComponent,\r\n         ProgramsMaintModalResult } from './programs-maintenance-modal.component';\r\nimport { DataApiService } from 'app/shared/services/data-api.service';\r\nimport { ModalStaticHelper, ModalResult } from 'app/shared/classes/modal-helpers';\r\n\r\nexport { ProgramsMaintModalResult } from './programs-maintenance-modal.component';\r\n\r\n@Injectable()\r\nexport class ProgramsMaintenanceModalService {\r\n\r\n  programProfiles: ProgramProfile[];\r\n  closeResult: string;\r\n\r\n  constructor(\r\n    private dataApiService: DataApiService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  async maintainProgram(configType, nextId?: number, program?: Program): Promise<ModalResult> {\r\n    const modalResult = new ModalResult();\r\n\r\n    const promise = new Promise<ModalResult>((resolve, reject) => {\r\n      this.maintainProgramModal(configType, nextId, program)\r\n      .then( async (result) => { // hmm, mixed syntax\r\n        if (result.resultTxt === AppConstants.SAVESUCCESS) {\r\n          try {\r\n            if (program && program.status) {\r\n              program.detectChanges = 'saving';\r\n              program.status.update(program);\r\n            }\r\n            modalResult.modalOutput = await this.fulfillProgramMaintenance(result, configType);\r\n            modalResult.success = true;\r\n          } catch (error) {\r\n            // TODO part of larger error handling effort\r\n          }\r\n\r\n          modalResult.closeResult = `Closed with: ${result.resultTxt}`;\r\n        } else {\r\n          modalResult.closeResult = `Closed with: ${result}`;\r\n        }\r\n        console.log('maintainProgram', modalResult);\r\n        resolve(modalResult);\r\n      }, (reason) => {\r\n        modalResult.closeResult = `Dismissed ${ModalStaticHelper.getDismissReason(reason)}`;\r\n        reject(modalResult);\r\n      }).catch((error) => {\r\n        console.log('maintainProgram', error);\r\n        reject(error);\r\n      });\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  private async fulfillProgramMaintenance(result, configType): Promise<ProgramsMaintModalResult> {\r\n    const modalResult: ProgramsMaintModalResult = result.modalResult;\r\n    if (configType === 'add' && modalResult.insertProgram) {\r\n      const newProgram = await this.addProgramAndProfile(modalResult.insertProgram, modalResult.insertProgramProfile);\r\n      console.log('fulfillProgramMaintenance add', newProgram);\r\n      modalResult.resultProgram = newProgram;\r\n    }\r\n    if (configType === 'edit' && modalResult.updateProgram) {\r\n      if (modalResult.updateProgramProfile || modalResult.insertProgramProfile) {\r\n        // means a new profile was added (prev one expired)\r\n        modalResult.resultProgram =\r\n          await this.updateProgramAndProfiles(\r\n            modalResult.updateProgram,\r\n            modalResult.updateProgramProfile,\r\n            modalResult.insertProgramProfile);\r\n      } else {\r\n        modalResult.resultProgram = await this.updateProgram(modalResult.updateProgram);\r\n      }\r\n    }\r\n    if (configType === 'expire' && modalResult.updateProgram) {\r\n      modalResult.resultProgram =\r\n        await this.updateProgramAndProfiles(\r\n          modalResult.updateProgram,\r\n          modalResult.updateProgramProfile);\r\n    }\r\n    return modalResult;\r\n  }\r\n\r\n  private async addProgramAndProfile(program: Program, programProfile: ProgramProfile): Promise<Program> {\r\n    // have to single thread these so they are done in the right order\r\n    try {\r\n      program = await this.dataApiService.createProgram(program);\r\n      const pp = await this.dataApiService.createProgramProfile(programProfile);\r\n      await (program.programProfile = [pp]);\r\n      console.log('addProgramAndProfile:', program);\r\n      return program;\r\n    } catch (error) {\r\n      console.log('addProgramAndProfile error: ', error);\r\n    }\r\n  }\r\n\r\n  private async updateProgramAndProfiles(\r\n    updateProgram: Program,\r\n    updateProgramProfile?: ProgramProfile,\r\n    insertProgramProfile?: ProgramProfile): Promise<Program> {\r\n    // have to single thread these so they are done in the right order\r\n    try {\r\n      if (updateProgramProfile) {\r\n        await this.dataApiService.updateProgramProfile(updateProgramProfile)\r\n          .then(ppu => {\r\n            for (let i = 0; i < updateProgram.programProfile.length; i++) {\r\n              if (updateProgram.programProfile[i].id === ppu.id) {\r\n                  updateProgram.programProfile[i] = ppu;\r\n              }\r\n            }\r\n          });\r\n      }\r\n      if (insertProgramProfile) {\r\n        const ppc: ProgramProfile = await this.dataApiService.createProgramProfile(insertProgramProfile);\r\n        updateProgram.programProfile.push(ppc);\r\n      }\r\n      const pu = await this.dataApiService.updateProgram(updateProgram);\r\n      console.log('addProgramAndProfile:', updateProgram);\r\n      return updateProgram;\r\n    } catch (error) {\r\n      console.log('addProgramAndProfile error: ', error);\r\n    }\r\n  }\r\n\r\n  private async maintainProgramModal(configType, nextId?: number, program?: Program): Promise<any> {\r\n\r\n    const modalOpts: NgbModalOptions = {\r\n      size: 'lg'\r\n    };\r\n    const modalRef = this.modalService.open(ProgramsMaintenanceModalComponent, modalOpts);\r\n    const modalComp: ProgramsMaintenanceModalComponent  = modalRef.componentInstance;\r\n\r\n    // initialize all the @Inputs to the component\r\n    modalComp.configType = configType;\r\n    modalComp.program = (program) ? new Program(program.id, program.name) : new Program(); // shallow copy just to display\r\n    modalComp.programForForm = await this.setupProgramForForm(configType, nextId, program);\r\n\r\n    // OnInit has likely fired previously, invoke some initialization code\r\n    modalComp.modalInit();\r\n\r\n    return modalRef.result;\r\n\r\n  }\r\n\r\n  private async setupProgramForForm(configType, nextId?: number, program?: Program): Promise<Program> {\r\n    if (configType === 'add' && nextId) {\r\n      return new Program(nextId, '');\r\n    }\r\n    if (program && (configType === 'edit' || configType === 'expire')) {\r\n      const programForForm: Program = new Program(program.id, program.name, program.description);\r\n      // don't use references from existing program\r\n      programForForm.programProfile = await this.findProgramProfiles(program);\r\n      // but ok for these...\r\n      programForForm.programConfiguration = program.programConfiguration;\r\n      programForForm.programProfileClientException = program.programProfileClientException;\r\n      return programForForm;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private async addProgramProfile(programProfile: ProgramProfile) {\r\n    try {\r\n      await this.dataApiService.createProgramProfile(programProfile);\r\n      console.log('addProgramProfile:', programProfile, this.programProfiles);\r\n    } catch (error) {\r\n      console.log('addProgramProfile error: ', error);\r\n    }\r\n  }\r\n\r\n  private async addProgram(program: Program) {\r\n    try {\r\n      program = await this.dataApiService.createProgram(program);\r\n      console.log('addProgram:', program);\r\n    } catch (error) {\r\n      console.log('addProgram error: ', error);\r\n    }\r\n  }\r\n\r\n  private async getProgramById(programId: number): Promise<Program> {\r\n    try {\r\n      const program: Program = await this.dataApiService.getProgramById(programId);\r\n      console.log('getProgramById:', program);\r\n      return program;\r\n    } catch (error) {\r\n      console.log('getProgramById error: ', error);\r\n    }\r\n  }\r\n\r\n  private async updateProgram(program: Program): Promise<Program> {\r\n    try {\r\n      const updateProgram = await this.dataApiService.updateProgram(program);\r\n      console.log('updateProgram:', program);\r\n      return updateProgram;\r\n    } catch (error) {\r\n      console.log('updateProgram error: ', error);\r\n    }\r\n  }\r\n\r\n  private async updateProgramProfile(programProfile: ProgramProfile): Promise<ProgramProfile> {\r\n    try {\r\n      const updateProgramProfile = await this.dataApiService.updateProgramProfile(programProfile);\r\n      console.log('updateProgramProfile:', programProfile, this.programProfiles);\r\n      return updateProgramProfile;\r\n    } catch (error) {\r\n      console.log('updateProgramProfile error: ', error);\r\n    }\r\n  }\r\n\r\n  async getProgramProfiles(): Promise<ProgramProfile[]> {\r\n    try {\r\n      this.programProfiles = await this.dataApiService.getProgramProfiles();\r\n      return this.programProfiles;\r\n    } catch (error) {\r\n      console.log('getPrograms error: ', error);\r\n    }\r\n  }\r\n\r\n  private async findProgramProfiles(selectedProgram: Program): Promise<ProgramProfile[]> {\r\n    await this.getProgramProfiles();\r\n    return this.programProfiles.filter(pp => {\r\n      if (typeof(pp.program) === 'number') {\r\n        if (pp.program === selectedProgram.id) {\r\n          return true;\r\n        } else { return false; }\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/programs/services/programs-maintenance/programs-maintenance-modal.service.ts","import { ModalDismissReasons, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\nexport class ModalStaticHelper {\n  public static getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}\n\nexport class ModalResult {\n  success: boolean = false;\n  closeResult: string;\n  modalOutput: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/shared/classes/modal-helpers.ts","export class ProgramProfile {\r\n  id: number;\r\n  defaultOptIn: 'Y' | 'N';\r\n  visibleInUi: 'Y' | 'N' | 'P';\r\n  chanEmail:  'Y' | 'N';\r\n  chanIvr:    'Y' | 'N';\r\n  chanSms:    'Y' | 'N';\r\n  chanSecure: 'Y' | 'N';\r\n  chanMail:   'Y' | 'N';\r\n  chanMobile: 'Y' | 'N';\r\n  effective: string;\r\n  expiration: string;\r\n  program: number;\r\n\r\n  constructor(programId: number, programProfile?: ProgramProfile, inclId?: boolean) {\r\n\r\n    if (programProfile) {\r\n\r\n      // this.id = inclId ? programProfile.id : undefined;\r\n      if (inclId) {\r\n        this.id = programProfile.id;\r\n      }\r\n\r\n      this.defaultOptIn = programProfile.defaultOptIn;\r\n      this.visibleInUi  = programProfile.visibleInUi;\r\n      this.chanEmail    = programProfile.chanEmail;\r\n      this.chanIvr      = programProfile.chanIvr;\r\n      this.chanSms      = programProfile.chanSms;\r\n      this.chanSecure   = programProfile.chanSecure;\r\n      this.chanMail     = programProfile.chanMail;\r\n      this.chanMobile   = programProfile.chanMobile;\r\n      this.effective    = programProfile.effective;\r\n      this.expiration   = programProfile.expiration;\r\n\r\n      this.program      = programId;\r\n\r\n    } else {\r\n\r\n      this.defaultOptIn = 'N';\r\n      this.visibleInUi  = 'N';\r\n      this.chanEmail    = 'N';\r\n      this.chanIvr      = 'N';\r\n      this.chanSms      = 'N';\r\n      this.chanSecure   = 'N';\r\n      this.chanMail     = 'N';\r\n      this.chanMobile   = 'N';\r\n\r\n      this.program      = programId;\r\n\r\n    }\r\n  }\r\n\r\n  clone() {\r\n    return new ProgramProfile(this.program, this, true);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/shared/model/program-profile.ts"],"sourceRoot":"webpack:///"}