{"version":3,"sources":["C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications-routing.module.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications.module.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/client-configurations/client-configs-by-comm-modal.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/client-configurations/client-configs-by-comm-modal.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/client-configurations/client-configs-by-comm-modal.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/client-configurations/client-configs-by-comm-modal.service.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/program-configurations/prog-configs-by-comm-modal.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/program-configurations/prog-configs-by-comm-modal.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/program-configurations/prog-configs-by-comm-modal.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/program-configurations/prog-configs-by-comm-modal.service.ts"],"names":[],"mappings":"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","file":"communications.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CommunicationsComponent } from './communications.component';\r\n\r\nconst routes: Routes =  [\r\n  { path: '',    component: CommunicationsComponent }\r\n];\r\n\r\nexport const routedComponents = [CommunicationsComponent];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CommunicationsRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications-routing.module.ts","module.exports = \"<h4>Manage Communications</h4>\\r\\n<app-comm-action-table \\r\\n  [communications]=\\\"communications\\\"\\r\\n  [displayComm]=\\\"displayComm\\\"\\r\\n  [displayCommStartEmpty]=\\\"false\\\"\\r\\n  [showCommId]=\\\"true\\\"\\r\\n  [showCommName]=\\\"true\\\"\\r\\n  [showCommDesc]=\\\"true\\\"\\r\\n  [showStatus]=\\\"true\\\"\\r\\n  [showAction]=\\\"true\\\"\\r\\n  (selRowOut)=\\\"setClickedRow($event)\\\"\\r\\n  (commConfigAction)=\\\"configureCommunication($event)\\\">\\r\\n</app-comm-action-table>\\r\\n<!-- TODO this can probably get moved into the component -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications.component.html\n// module id = ../../../../../src/app/communications/communications.component.html\n// module chunks = communications.module","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications.component.scss\n// module id = ../../../../../src/app/communications/communications.component.scss\n// module chunks = communications.module","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { Communication, CommunicationConfigAction } from 'app/shared/model/communication';\r\nimport { DataApiService } from 'app/shared/services/data-api.service';\r\n\r\nimport { ProgramConfigsByCommModalService } from './services/program-configurations/prog-configs-by-comm-modal.service';\r\nimport { ClientConfigsByCommModalService } from './services/client-configurations/client-configs-by-comm-modal.service';\r\n\r\n@Component({\r\n  selector: 'app-communications',\r\n  templateUrl: './communications.component.html',\r\n  styleUrls: ['./communications.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CommunicationsComponent implements OnInit {\r\n\r\n  communications: Communication[];\r\n  // programs: Program[];\r\n  // programConfigurations: ProgramConfiguration[];\r\n  // clients: Client[];\r\n  // clientConfigurations: ClientConfiguration[];\r\n  displayComm: Communication[];\r\n  displayCommStartEmpty: boolean;\r\n\r\n  selectedRow: number;\r\n\r\n  constructor(\r\n    private dataApiService: DataApiService,\r\n    private programConfigurationService: ProgramConfigsByCommModalService,\r\n    private clientConfigsByCommModalService: ClientConfigsByCommModalService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    await this.getCommunications();\r\n\r\n    this.displayCommStartEmpty = false;\r\n    this.displayComm = this.communications;\r\n\r\n    console.log('CommunicationComponent ngOnInit', this.communications);\r\n  }\r\n\r\n  private configureCommunication(commConfigAction: CommunicationConfigAction) {\r\n    if (commConfigAction.configType === 'clients') {\r\n      this.configureCommunicationForClient(commConfigAction.commId);\r\n    }\r\n    if (commConfigAction.configType === 'program') {\r\n      this.configureCommunicationForProgram(commConfigAction.commId);\r\n    }\r\n    this.setClickedRow(null);\r\n  }\r\n\r\n  private configureCommunicationForClient(commId) {\r\n    // invoke service to manage a modal dialog allowing user to\r\n    // configure the client-level communication configurations\r\n    const communication: Communication = this.findCommunication(commId);\r\n    this.clientConfigsByCommModalService.configureClientModal(communication);\r\n  }\r\n  private configureCommunicationForProgram(commId) {\r\n    // invoke service to manage a modal dialog allowing user to\r\n    // configure the program-level communication configurations\r\n    const communication: Communication = this.findCommunication(commId);\r\n    this.programConfigurationService.configureProgramModal(communication);\r\n  }\r\n\r\n  private findCommunication(id: number): Communication {\r\n    return this.communications.find(c => c.id === id);\r\n  }\r\n\r\n  async getCommunications() {\r\n    try {\r\n      this.communications = await this.dataApiService.getCommunications();\r\n    } catch (error) {\r\n      console.log('getCommunications error: ', error);\r\n    }\r\n  }\r\n\r\n  private setClickedRow(index) {\r\n    this.selectedRow = index;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications.component.ts","// Communications feature Module\r\n//\r\nimport { NgModule } from '@angular/core';\r\n// import { CommonModule } from '@angular/common';\r\n\r\nimport { routedComponents,\r\n         CommunicationsRoutingModule        } from './communications-routing.module';\r\n\r\nimport { ClientConfigsByCommModalComponent  } from './services/client-configurations/client-configs-by-comm-modal.component';\r\nimport { ProgramConfigsByCommModalComponent } from './services/program-configurations/prog-configs-by-comm-modal.component';\r\nimport { ClientConfigsByCommModalService    } from './services/client-configurations/client-configs-by-comm-modal.service';\r\nimport { ProgramConfigsByCommModalService   } from './services/program-configurations/prog-configs-by-comm-modal.service';\r\n\r\n// shared\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    /// CommonModule, // gets provided by shared module\r\n    CommunicationsRoutingModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    routedComponents,\r\n    ClientConfigsByCommModalComponent,\r\n    ProgramConfigsByCommModalComponent\r\n  ],\r\n  entryComponents: [\r\n    ClientConfigsByCommModalComponent,\r\n    ProgramConfigsByCommModalComponent\r\n  ],\r\n  providers: [\r\n    ClientConfigsByCommModalService,\r\n    ProgramConfigsByCommModalService\r\n  ]\r\n})\r\nexport class CommunicationsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/communications.module.ts","module.exports = \"<form #clientConfigurationByCommunicationForm=\\\"ngForm\\\" \\r\\n(ngSubmit)=\\\"saveClientConfiguration()\\\" >\\r\\n\\r\\n  <div class=\\\"modal-header bg-gradient-dark\\\">\\r\\n    <h4 class=\\\"modal-title text-white\\\">\\r\\n      Configure Clients(s)\\r\\n      <small>for CommId {{communication.id}}: {{communication.name}}</small>\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close text-white\\\" aria-label=\\\"Close\\\" (click)=\\\"configureClientModal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n    \\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div id=\\\"configuredClients\\\">\\r\\n        <table class=\\\"table table-responsive table-sm table-striped table-bordered table-hover\\\">\\r\\n            <caption></caption>\\r\\n            <thead class=\\\"bg-gradient-dark text-white\\\">\\r\\n              <tr>\\r\\n                <th>ID</th>\\r\\n                <th>C<small>ode</small></th>\\r\\n                <th>N<small>ame</small></th>\\r\\n                <th>E<small>mail</small></th>\\r\\n                <th>IVR</th>\\r\\n                <th>SMS</th>\\r\\n                <th>M<small>ail</small></th>\\r\\n                <th>M<small>obile</small></th>\\r\\n                <th>D<small>efault</small></th>\\r\\n                <th>E<small>ffective</small></th>\\r\\n                <th>E<small>xpiration</small></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr appDroppable *ngFor=\\\"let cc of clientConfigurations; let i = index\\\"\\r\\n                  [dragOverClass]=\\\"'drag-target-border'\\\" [dragHintClass]=\\\"'drag-hint'\\\"\\r\\n                  [dropEnabled]=\\\"i === lastClientConfigRow && !cc.client.id\\\"\\r\\n                  \\r\\n                  (onDrop)=\\\"clientDrop($event)\\\"\\r\\n                  [class.table-info]=\\\"i == lastClientConfigRow\\\"> \\r\\n                \\r\\n                <td>\\r\\n                  <span *ngIf=\\\"i !== lastClientConfigRow\\\" class=\\\"badge badge-secondary\\\">{{cc.client.id}}</span>\\r\\n                  <span *ngIf=\\\"i === lastClientConfigRow && !cc.client.id\\\">\\r\\n                    <i class=\\\"fa fa-file-o clickable\\\" aria-hidden=\\\"true\\\" \\r\\n                       title=\\\"New Client configuration for {{communication.name}}\\\"></i></span>\\r\\n                  <span *ngIf=\\\"i === lastClientConfigRow && cc.client.id\\\" class=\\\"badge badge-primary\\\">{{cc.client.id}}</span>\\r\\n                </td>\\r\\n                <td><span >{{cc.client.code}}</span></td>\\r\\n                <td width=\\\"18%\\\"><span >{{cc.client.name}}</span></td>\\r\\n                <td><app-select-channel-priority \\r\\n                      id=\\\"chanEmailPriority\\\" name=\\\"chanEmailPriority\\\" \\r\\n                      [(ngModel)]=\\\"cc.chanEmailPriority\\\"\\r\\n                      [actualStaticValue]=\\\"cc.chanEmailPriority\\\"\\r\\n                      [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td>\\r\\n                <td><app-select-channel-priority \\r\\n                      id=\\\"chanIvrPriority\\\" name=\\\"chanIvrPriority\\\" \\r\\n                      [(ngModel)]=\\\"cc.chanIvrPriority\\\"\\r\\n                      [actualStaticValue]=\\\"cc.chanIvrPriority\\\"\\r\\n                      [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td>\\r\\n                <td><app-select-channel-priority \\r\\n                      id=\\\"chanSmsPriority\\\" name=\\\"chanSmsPriority\\\" \\r\\n                      [(ngModel)]=\\\"cc.chanSmsPriority\\\"\\r\\n                      [actualStaticValue]=\\\"cc.chanSmsPriority\\\"\\r\\n                      [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td>  \\r\\n                <td><app-select-channel-priority \\r\\n                      id=\\\"chanMailPriority\\\" name=\\\"chanMailPriority\\\" \\r\\n                      [(ngModel)]=\\\"cc.chanMailPriority\\\"\\r\\n                      [actualStaticValue]=\\\"cc.chanMailPriority\\\"\\r\\n                      [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td> \\r\\n                <td><app-select-channel-priority \\r\\n                      id=\\\"chanMobilePriority\\\" name=\\\"chanMobilePriority\\\" \\r\\n                      [(ngModel)]=\\\"cc.chanMobilePriority\\\"\\r\\n                      [actualStaticValue]=\\\"cc.chanMobilePriority\\\"\\r\\n                      [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td> \\r\\n                <td><app-select-channel-default\\r\\n                      id=\\\"chanDefault\\\" name=\\\"chanDefault\\\" \\r\\n                      [(ngModel)]=\\\"cc.chanDefault\\\"\\r\\n                      [actualStaticValue]=\\\"cc.chanDefault\\\"\\r\\n                      [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-default></td>\\r\\n                <td><app-date-eff-exp\\r\\n                      dateType=\\\"effective\\\" [commConfig]=\\\"cc\\\"\\r\\n                      [lastConfigRow]=\\\"i === lastClientConfigRow\\\"\\r\\n                      (newDateValue)=\\\"updateDateValue($event, cc, 'effective')\\\"></app-date-eff-exp></td>\\r\\n                <td><app-date-eff-exp\\r\\n                      dateType=\\\"expiration\\\" [commConfig]=\\\"cc\\\"\\r\\n                      [lastConfigRow]=\\\"i === lastClientConfigRow\\\"\\r\\n                      (newDateValue)=\\\"updateDateValue($event, cc, 'expiration')\\\"></app-date-eff-exp></td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"configureState === 'start' || configureState === 'continue'\\\">\\r\\n                <td>\\r\\n                  <i class=\\\"fa fa-plus-square-o clickable\\\" aria-hidden=\\\"true\\\" \\r\\n                    (click)=\\\"addClientConfig()\\\" title=\\\"Add New Client Configuration to {{communication.name}}\\\"></i>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n    </div><!--configuredClients-->  \\r\\n  </div>\\r\\n      \\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <div class=\\\"w-100\\\">\\r\\n      <span class=\\\"float-left\\\">Some instructional content or condition message goes here: </span>\\r\\n      <div class=\\\"float-right\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark\\\" [disabled]=\\\"!clientConfigurationByCommunicationForm.valid\\\">Save</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"configureClientModal.close('Close click')\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <div id=ActionTable>\\r\\n      <app-client-action-table  *ngIf=\\\"configureState === 'pick' || configureState === 'continue'\\\"\\r\\n        [configureState]=\\\"configureState\\\"  \\r\\n        [clients]=\\\"clients\\\"\\r\\n        [displayClient]=\\\"displayClient\\\"\\r\\n        [supressClient]=\\\"supressClient\\\"\\r\\n        [displayClientStartEmpty]=\\\"displayClientStartEmpty\\\"\\r\\n        [displayCommunication]=\\\"communication.name\\\"\\r\\n        [showClientId]=\\\"true\\\"\\r\\n        [showClientCode]=\\\"true\\\"\\r\\n        [showClientName]=\\\"true\\\"\\r\\n        [showStatus]=\\\"false\\\"\\r\\n        [showAction]=\\\"false\\\"\\r\\n        (selRowOut)=\\\"setClickedRow($event)\\\"\\r\\n        (clientConfigAction)=\\\"configureClient($event)\\\"\\r\\n        (selectedClient)=\\\"addClientConfig($event)\\\">\\r\\n      </app-client-action-table>\\r\\n    </div>\\r\\n  </div>\\r\\n</form> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/client-configurations/client-configs-by-comm-modal.component.html\n// module id = ../../../../../src/app/communications/services/client-configurations/client-configs-by-comm-modal.component.html\n// module chunks = communications.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"div.scroll-list {\\n  overflow: auto;\\n  max-height: 70vh; }\\n\\n.drag-over {\\n  border: #ff525b dashed 2px; }\\n\\n.drag-hint {\\n  border: #ffc100 dashed 2px; }\\n\\n.drag-target-border {\\n  border: #00bfff dashed 2px; }\\n\\n.drag-target-border-green {\\n  border: #3c763d dashed 2px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/client-configurations/client-configs-by-comm-modal.component.scss\n// module id = ../../../../../src/app/communications/services/client-configurations/client-configs-by-comm-modal.component.scss\n// module chunks = communications.module","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Client } from 'app/shared/model/client';\r\nimport { ClientConfiguration } from 'app/shared/model/client-configuration';\r\nimport { Communication } from 'app/shared/model/communication';\r\n\r\nexport class ClientConfigModalResult {\r\n  newClientConfigs: ClientConfiguration[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-client-configs-by-comm-modal',\r\n  templateUrl: './client-configs-by-comm-modal.component.html',\r\n  styleUrls: ['./client-configs-by-comm-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ClientConfigsByCommModalComponent implements OnInit {\r\n\r\n  @Input() communication: Communication;\r\n  @Input() clients: Client[];\r\n  @Input() clientConfigurations: ClientConfiguration[];\r\n\r\n  displayClient: Client[];\r\n  displayClientStartEmpty: boolean;\r\n  supressClient: number[];\r\n\r\n  newClientConfig: ClientConfiguration;\r\n  prevClientConfig: ClientConfiguration;\r\n  newClientConfigs: ClientConfiguration[];\r\n\r\n  lastClientConfigRow: number;\r\n  configureState: 'start' | 'pick' | 'continue' | 'configure' | 'save';\r\n\r\n  clientDropEnabled: boolean = false;\r\n\r\n  selectedRow: number;\r\n\r\n  today = new Date();\r\n  tomorrow = new Date();\r\n\r\n  constructor(\r\n    private configureClientModal: NgbActiveModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  modalInit() {\r\n    console.log('ClientConfigsByCommModalComponent init: ');\r\n    console.log(this.communication);\r\n    // get the list of clients to populate the dropdown (covered in @Input() clients: Client[];)\r\n    // check if there are progConfig already (for now just checking for first one, have to check for eff dates)\r\n    this.displayClientStartEmpty = true;\r\n    this.displayClient = [];\r\n    this.newClientConfigs = [];\r\n    this.tomorrow.setDate(this.today.getDate() + 1);\r\n    this.configureState = 'start';\r\n\r\n    this.supressClient = this.findExistingConfiguredClients();\r\n  }\r\n\r\n  private addClientConfig(client?: Client) {\r\n\r\n    if (this.newClientConfig && this.configureState === 'pick') {\r\n      this.newClientConfig.client = client;\r\n      this.supressClient.push(client.id);\r\n      this.clientDropEnabled = false;\r\n    }\r\n\r\n    if (this.configureState === 'start' || this.configureState === 'continue') {\r\n      // first time through\r\n      this.lastClientConfigRow = this.clientConfigurations.length;\r\n      if (this.lastClientConfigRow === 0) {\r\n        this.newClientConfig = new ClientConfiguration();\r\n        this.newClientConfig.effective =  // TODO shared util method\r\n            this.tomorrow.getFullYear() + '-' +\r\n          (this.tomorrow.getMonth() + 1) + '-' +\r\n            this.tomorrow.getDate();\r\n      } else {\r\n        // clone setting from previous config row\r\n        this.prevClientConfig = this.clientConfigurations[this.lastClientConfigRow - 1];\r\n        this.newClientConfig = new ClientConfiguration(this.prevClientConfig);\r\n        this.newClientConfig.effective = this.prevClientConfig.effective;\r\n      }\r\n      this.clientConfigurations[this.clientConfigurations.length] = this.newClientConfig;\r\n      this.newClientConfigs[this.newClientConfigs.length] = this.newClientConfig;\r\n      this.newClientConfig.expiration = AppConstants.UNEXPIRED;\r\n      this.newClientConfig.communication = this.communication;\r\n\r\n      this.newClientConfig.client = new Client();\r\n\r\n      this.configureState = 'pick';\r\n      this.clientDropEnabled = true;\r\n    } else {\r\n      if (this.newClientConfig && this.configureState === 'pick') {\r\n        this.configureState = 'continue';\r\n      }\r\n    }\r\n  }\r\n\r\n  private clientDrop(dragEvent) {\r\n    console.log('ClientConfigComponent clientDrop: ', dragEvent);\r\n    if (dragEvent.dragData && typeof(dragEvent.dragData.id) === 'number' ) {\r\n      this.addClientConfig(this.findClient(dragEvent.dragData.id));\r\n    }\r\n  }\r\n\r\n  private findClient(id): Client {\r\n    return this.clients.find(c => c.id === id);\r\n  }\r\n\r\n  private findExistingConfiguredClients(): number[] {\r\n    const existing: number[] = [];\r\n    for (let i = 0; i < this.clientConfigurations.length; i++) {\r\n      existing.push(this.clientConfigurations[i].client.id);\r\n    }\r\n    return existing;\r\n  }\r\n\r\n  private saveClientConfiguration() {\r\n    console.log('ClientConfigComponent save');\r\n    console.log(this.newClientConfig, ' communication id: ', this.communication);\r\n\r\n    const modalResult: ClientConfigModalResult = {\r\n      newClientConfigs: this.newClientConfigs\r\n    };\r\n\r\n    this.configureClientModal.close({resultTxt: AppConstants.SAVESUCCESS, modalResult: modalResult});\r\n  }\r\n\r\n  private updateDateValue(newDateValue, cc: ClientConfiguration, dateType: string) {\r\n    console.log('ClientConfigComponent updateDateValue: ', newDateValue, cc, dateType);\r\n    if (dateType === 'effective') {\r\n      cc.effective = newDateValue;\r\n    }\r\n    if (dateType === 'expiration') {\r\n      cc.expiration = newDateValue;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/client-configurations/client-configs-by-comm-modal.component.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { NgbModal,\r\n         ModalDismissReasons,\r\n         NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Communication } from 'app/shared/model/communication';\r\nimport { Client } from 'app/shared/model/client';\r\nimport { ClientConfiguration } from 'app/shared/model/client-configuration';\r\n\r\nimport { ClientConfigsByCommModalComponent,\r\n         ClientConfigModalResult } from './client-configs-by-comm-modal.component';\r\n\r\nimport { DataApiService } from 'app/shared/services/data-api.service';\r\n\r\n@Injectable()\r\nexport class ClientConfigsByCommModalService {\r\n\r\n  clients: Client[];\r\n  clientConfigurations: ClientConfiguration[];\r\n  closeResult: string;\r\n\r\n  constructor(\r\n    private dataApiService: DataApiService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  private addClientConfiguration(clientConfiguration: ClientConfiguration): void {\r\n    this.dataApiService.createClientConfiguration(clientConfiguration)\r\n      .then(pc => console.log('addClientConfiguration:', clientConfiguration, this.clientConfigurations))\r\n      .catch(error =>  console.log('addClientConfiguration error: ', error));\r\n  }\r\n\r\n  async configureClientModal(communication: Communication) {\r\n    const modalOpts: NgbModalOptions = {\r\n      size: 'lg'\r\n    };\r\n    const modalRef = this.modalService.open(ClientConfigsByCommModalComponent, modalOpts);\r\n    const modalComp: ClientConfigsByCommModalComponent  = modalRef.componentInstance;\r\n\r\n    modalComp.communication = communication;\r\n    modalComp.clients = await this.getClients();\r\n    modalComp.clientConfigurations = await this.findClientConfigurations(communication);\r\n    modalComp.modalInit();\r\n\r\n    modalRef.result.then((result) => {\r\n      if (result.resultTxt === AppConstants.SAVESUCCESS) {\r\n        console.log('configureClientModal result: ', result.modalResult);\r\n        this.closeResult = `Closed with: ${result.resultTxt}`;\r\n        if (result.modalResult) {\r\n          const modalResult: ClientConfigModalResult = result.modalResult;\r\n\r\n          if (modalResult.newClientConfigs) {\r\n            for (let i = 0; i < modalResult.newClientConfigs.length; i++) {\r\n              this.addClientConfiguration(modalResult.newClientConfigs[i]);\r\n            }\r\n          }\r\n        } else {\r\n          // this would be some kind of exception\r\n          console.log('CommunicationComponent configureClientModal bad result: ', result.modalResult);\r\n        }\r\n      } else {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }\r\n      // this.setClickedRow(null);\r\n      console.log('configureClientModal result: ', this.closeResult);\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      // this.setClickedRow(null);\r\n      console.log('configureClientModal result: ', this.closeResult);\r\n    });\r\n  }\r\n\r\n  private findClient(id): Client {\r\n    return this.clients.find(c => c.id === id);\r\n  }\r\n\r\n  private async findClientConfigurations(selectedComm: Communication) { // : ClientConfiguration[] {\r\n    await this.getClientConfigurations();\r\n    return this.clientConfigurations.filter(cc => {\r\n      if (typeof(cc.communication) === 'number') {\r\n        if (cc.communication === selectedComm.id) {\r\n          cc.communication = selectedComm;\r\n          if (typeof(cc.client) === 'number') {\r\n            cc.client = this.findClient(<number> cc.client);\r\n          }\r\n          return true;\r\n        } else { return false; }\r\n      } else if (cc.communication.id === selectedComm.id) {\r\n        if (typeof(cc.client) === 'number') {\r\n          cc.client = this.findClient(<number> cc.client);\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  async getClients() {\r\n    try {\r\n      this.clients = await this.dataApiService.getClients();\r\n      return this.clients;\r\n    } catch (error) {\r\n      console.log('getClients error: ', error);\r\n    }\r\n  }\r\n\r\n  async getClientConfigurations() {\r\n    try {\r\n      this.clientConfigurations = await this.dataApiService.getClientConfigurations();\r\n      return this.clientConfigurations;\r\n    } catch (error) {\r\n      console.log('getClientConfigurations error: ', error);\r\n    }\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return  `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/client-configurations/client-configs-by-comm-modal.service.ts","module.exports = \"<form #programConfigurationViaCommunicationForm=\\\"ngForm\\\" \\r\\n(ngSubmit)=\\\"saveProgramConfiguration()\\\" >\\r\\n\\r\\n<div class=\\\"modal-header bg-gradient-dark\\\">\\r\\n  <h4 class=\\\"modal-title text-white\\\">\\r\\n    Configure Program <!-- -->\\r\\n    <small>for CommId {{communication.id}}: {{communication.name}}</small> \\r\\n  </h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close text-white\\\" aria-label=\\\"Close\\\" (click)=\\\"configureProgramModal.dismiss('Cross click')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  <table class=\\\"table table-responsive table-sm table-striped table-bordered table-hover\\\">\\r\\n    <caption></caption>\\r\\n    <thead class=\\\"bg-gradient-dark text-white\\\">\\r\\n      <tr>\\r\\n        <th>ID</th>\\r\\n        <th>N<small>ame</small></th>\\r\\n        <th>E<small>mail</small></th>\\r\\n        <th>IVR</th>\\r\\n        <th>SMS</th>\\r\\n        <th>M<small>ail</small></th>\\r\\n        <th>M<small>obile</small></th>\\r\\n        <th>D<small>efault</small></th>\\r\\n        <th>E<small>ffective</small></th>\\r\\n        <th>E<small>xpiration</small></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let pc of programConfigurations; let i = index\\\" \\r\\n          [class.table-info]=\\\"i == lastPgmConfigRow\\\">\\r\\n        <td>\\r\\n          <span *ngIf=\\\"i !== lastPgmConfigRow\\\" class=\\\"badge badge-secondary\\\">{{pc.id}}</span>\\r\\n          <span *ngIf=\\\"i === lastPgmConfigRow\\\">\\r\\n              <i class=\\\"fa fa-file-o clickable\\\" aria-hidden=\\\"true\\\" \\r\\n                 title=\\\"New Program configuration for {{communication.name}}\\\"></i></span></td>\\r\\n        <td>\\r\\n          <span *ngIf=\\\"i !== lastPgmConfigRow\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"name\\\" [(ngModel)]=\\\"pc.name\\\" readonly\\r\\n                   id=\\\"pgmConfigName\\\" aria-describedby=\\\"pgmConfigNameHelp\\\" placeholder=\\\"Enter Program Configuration Name\\\"></span>\\r\\n          <span *ngIf=\\\"i === lastPgmConfigRow\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" name=\\\"name\\\" [(ngModel)]=\\\"pc.name\\\" required\\r\\n                   id=\\\"pgmConfigName\\\" aria-describedby=\\\"pgmConfigNameHelp\\\" placeholder=\\\"Enter Program Configuration Name\\\"></span></td>\\r\\n        <td><app-select-channel-priority id=\\\"chanEmailPriority\\\" name=\\\"chanEmailPriority\\\" \\r\\n              [(ngModel)]=\\\"pc.chanEmailPriority\\\"\\r\\n              [actualStaticValue]=\\\"pc.chanEmailPriority\\\"\\r\\n              [lastConfigRow]=\\\"i === lastPgmConfigRow\\\" ></app-select-channel-priority></td>\\r\\n        <td><app-select-channel-priority id=\\\"chanIvrPriority\\\" name=\\\"chanIvrPriority\\\" \\r\\n              [(ngModel)]=\\\"pc.chanIvrPriority\\\"\\r\\n              [actualStaticValue]=\\\"pc.chanIvrPriority\\\"\\r\\n              [lastConfigRow]=\\\"i === lastPgmConfigRow\\\" ></app-select-channel-priority></td>\\r\\n        <td><app-select-channel-priority id=\\\"chanSmsPriority\\\" name=\\\"chanSmsPriority\\\" \\r\\n              [(ngModel)]=\\\"pc.chanSmsPriority\\\"\\r\\n              [actualStaticValue]=\\\"pc.chanSmsPriority\\\"\\r\\n              [lastConfigRow]=\\\"i === lastPgmConfigRow\\\" ></app-select-channel-priority></td>  \\r\\n        <td><app-select-channel-priority id=\\\"chanMailPriority\\\" name=\\\"chanMailPriority\\\" \\r\\n              [(ngModel)]=\\\"pc.chanMailPriority\\\"\\r\\n              [actualStaticValue]=\\\"pc.chanMailPriority\\\"\\r\\n              [lastConfigRow]=\\\"i === lastPgmConfigRow\\\" ></app-select-channel-priority></td> \\r\\n        <td><app-select-channel-priority id=\\\"chanMobilePriority\\\" name=\\\"chanMobilePriority\\\" \\r\\n              [(ngModel)]=\\\"pc.chanMobilePriority\\\"\\r\\n              [actualStaticValue]=\\\"pc.chanMobilePriority\\\"\\r\\n              [lastConfigRow]=\\\"i === lastPgmConfigRow\\\" ></app-select-channel-priority></td> \\r\\n        <td><app-select-channel-default id=\\\"chanDefault\\\" name=\\\"chanDefault\\\" \\r\\n              [(ngModel)]=\\\"pc.chanDefault\\\"\\r\\n              [actualStaticValue]=\\\"pc.chanDefault\\\"\\r\\n              [lastConfigRow]=\\\"i === lastPgmConfigRow\\\" ></app-select-channel-default></td>\\r\\n        <td><app-date-eff-exp\\r\\n              dateType=\\\"effective\\\" [commConfig]=\\\"pc\\\"\\r\\n              [lastConfigRow]=\\\"i === lastPgmConfigRow\\\"\\r\\n              (newDateValue)=\\\"updateDateValue($event, pc, 'effective')\\\"></app-date-eff-exp></td>\\r\\n        <td><app-date-eff-exp\\r\\n              dateType=\\\"expiration\\\" [commConfig]=\\\"pc\\\"\\r\\n              [lastConfigRow]=\\\"i === lastPgmConfigRow\\\"\\r\\n              (newDateValue)=\\\"updateDateValue($event, pc, 'expiration')\\\"></app-date-eff-exp></td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"programName\\\">Choose Program</label>\\r\\n    <select id=\\\"program\\\" name=\\\"program\\\" [(ngModel)]=\\\"selectedProgram\\\" required>\\r\\n      <option *ngFor=\\\"let p of programs\\\" [ngValue]=\\\"p.id\\\">{{p.name}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <!-- https://github.com/twbs/bootstrap/issues/24413 -->\\r\\n  <!--span class=\\\"mr-auto\\\">Some instructional content or condition message goes here: {{newPgmConfig.effective}}</span-->\\r\\n  <div class=\\\"w-100\\\">\\r\\n    <span class=\\\"float-left\\\">Some instructional content or condition message goes here:<!-- {{newPgmConfig.effective}}--></span>\\r\\n    <div class=\\\"float-right\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark\\\" [disabled]=\\\"!programConfigurationViaCommunicationForm.valid\\\">Save</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"configureProgramModal.close('Close click')\\\">Cancel</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/program-configurations/prog-configs-by-comm-modal.component.html\n// module id = ../../../../../src/app/communications/services/program-configurations/prog-configs-by-comm-modal.component.html\n// module chunks = communications.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/program-configurations/prog-configs-by-comm-modal.component.scss\n// module id = ../../../../../src/app/communications/services/program-configurations/prog-configs-by-comm-modal.component.scss\n// module chunks = communications.module","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Communication } from 'app/shared/model/communication';\r\nimport { Program } from 'app/shared/model/program';\r\nimport { ProgramConfiguration } from 'app/shared/model/program-configuration';\r\n\r\nexport class ProgramConfigModalResult {\r\n  prevProgConfig: ProgramConfiguration;\r\n  newProgConfig: ProgramConfiguration;\r\n}\r\n\r\n@Component({\r\n  // entry component, don't use the selector\r\n  // selector: 'app-program-configurations-modal',\r\n  templateUrl: './prog-configs-by-comm-modal.component.html',\r\n  styleUrls: ['./prog-configs-by-comm-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProgramConfigsByCommModalComponent implements OnInit {\r\n\r\n  @Input() communication: Communication = new Communication(); // wtf;\r\n  @Input() programs: Program[];\r\n  @Input() programConfigurations: ProgramConfiguration[];\r\n\r\n  newPgmConfig: ProgramConfiguration;\r\n  prevPgmConfig: ProgramConfiguration;\r\n\r\n  selectedProgram: number;\r\n  lastPgmConfigRow: number;\r\n\r\n  constructor(\r\n\r\n    private configureProgramModal: NgbActiveModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // console.log('ProgramConfigurationsModalComponent ngOnInit: ', this.programs);\r\n  }\r\n\r\n  modalInit() {\r\n    console.log('ProgramConfigByCommComponent init: ');\r\n    console.log(this.communication);\r\n    console.log(this.programConfigurations);\r\n    // get the list of programs to populate the dropdown (covered in @Input() programs: Program[];)\r\n    // check if there are progConfig already (for now just checking for first one, have to check for eff dates)\r\n    if (this.programConfigurations.length === 0) { // no existing configs for comm\r\n      this.addProgramConfig();\r\n    } else {\r\n      const indxOfLast = this.programConfigurations.length - 1;\r\n      if (this.programConfigurations[indxOfLast] && this.programConfigurations[indxOfLast].program) {\r\n        // why? this shows up as Object when it is ProgramConfiguration\r\n        this.prevPgmConfig = <ProgramConfiguration> this.programConfigurations[indxOfLast];\r\n        this.selectedProgram = this.prevPgmConfig.program.id;\r\n        this.addProgramConfig(this.programConfigurations[indxOfLast]);\r\n      }\r\n    }\r\n  }\r\n\r\n  addProgramConfig(lastPgmConfig?: ProgramConfiguration) {\r\n\r\n    const today = new Date();\r\n    const tomorrow = new Date();\r\n    tomorrow.setDate(today.getDate() + 1);\r\n\r\n    if (lastPgmConfig) {\r\n      // adding a new row, expiring the previous, copying the previous values\r\n      lastPgmConfig.expiration = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n      this.newPgmConfig = new ProgramConfiguration(lastPgmConfig);\r\n\r\n    } else {\r\n      // this is a first-time row for this communication, set some defaults\r\n      this.newPgmConfig = new ProgramConfiguration();\r\n\r\n    }\r\n\r\n    this.newPgmConfig.effective = tomorrow.getFullYear() + '-' + (tomorrow.getMonth() + 1) + '-' + tomorrow.getDate();\r\n    this.newPgmConfig.expiration = AppConstants.UNEXPIRED;\r\n\r\n    this.lastPgmConfigRow = this.programConfigurations.length;\r\n    this.programConfigurations[this.programConfigurations.length] = this.newPgmConfig;\r\n\r\n  }\r\n\r\n  private findProgram(id): Program {\r\n    return this.programs.find(p => p.id === id);\r\n  }\r\n\r\n  private saveProgramConfiguration() {\r\n    console.log('ProgramConfigByCommComponent save');\r\n    console.log(this.newPgmConfig, ' program id: ', this.selectedProgram);\r\n\r\n    this.newPgmConfig.program = this.findProgram(this.selectedProgram);\r\n    this.newPgmConfig.communication = this.communication;\r\n\r\n    const modalResult: ProgramConfigModalResult = {\r\n      prevProgConfig: this.prevPgmConfig,\r\n      newProgConfig: this.newPgmConfig\r\n    };\r\n\r\n    this.configureProgramModal.close({resultTxt: AppConstants.SAVESUCCESS, modalResult: modalResult});\r\n  }\r\n\r\n  private updateDateValue(newDateValue, pc: ProgramConfiguration, dateType: string) {\r\n    console.log('ProgramConfigByCommComponent updateDateValue: ', newDateValue, pc, dateType);\r\n    if (dateType === 'effective') {\r\n      pc.effective = newDateValue;\r\n    }\r\n    if (dateType === 'expiration') {\r\n      pc.expiration = newDateValue;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/program-configurations/prog-configs-by-comm-modal.component.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { NgbModal,\r\n         ModalDismissReasons,\r\n         NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Communication } from 'app/shared/model/communication';\r\nimport { Program } from 'app/shared/model/program';\r\nimport { ProgramConfiguration } from 'app/shared/model/program-configuration';\r\n\r\nimport { ProgramConfigsByCommModalComponent,\r\n         ProgramConfigModalResult } from './prog-configs-by-comm-modal.component';\r\nimport { DataApiService } from 'app/shared/services/data-api.service';\r\n\r\n@Injectable()\r\nexport class ProgramConfigsByCommModalService {\r\n\r\n  programs: Program[];\r\n  programConfigurations: ProgramConfiguration[];\r\n  closeResult: string;\r\n\r\n  constructor(\r\n    private dataApiService: DataApiService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  async configureProgramModal(communication: Communication) {\r\n    const modalOpts: NgbModalOptions = {\r\n      size: 'lg'\r\n    };\r\n    const modalRef = this.modalService.open(ProgramConfigsByCommModalComponent, modalOpts);\r\n    const modalComp: ProgramConfigsByCommModalComponent  = modalRef.componentInstance;\r\n\r\n    // this.programs = await this.getPrograms();\r\n    // this.programConfigurations = await this.getProgramConfigurations();\r\n\r\n    // modalComp.name = 'Configure Program';\r\n    modalComp.communication = communication;\r\n    modalComp.programs = await this.getPrograms();\r\n    modalComp.programConfigurations = await this.findProgramConfigurations(communication);\r\n    modalComp.modalInit();\r\n\r\n    modalRef.result.then((result) => {\r\n      if (result.resultTxt === AppConstants.SAVESUCCESS) {\r\n        console.log('configureProgramModal result: ', result.modalResult);\r\n        this.closeResult = `Closed with: ${result.resultTxt}`;\r\n        if (result.modalResult) {\r\n          const modalResult: ProgramConfigModalResult = result.modalResult;\r\n          if (modalResult.prevProgConfig) {\r\n            this.updateProgramConfiguration(modalResult.prevProgConfig);\r\n          }\r\n          if (modalResult.newProgConfig) {\r\n            this.addProgramConfiguration(modalResult.newProgConfig);\r\n          }\r\n        } else {\r\n          // this would be some kind of exception\r\n          console.log('CommunicationComponent configureProgramModal bad result: ', result.modalResult);\r\n        }\r\n      } else {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }\r\n      // this.setClickedRow(null);\r\n      console.log('configureProgramModal result: ', this.closeResult);\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      // this.setClickedRow(null);\r\n      console.log('configureProgramModal result: ', this.closeResult);\r\n    });\r\n  }\r\n\r\n  private addProgramConfiguration(programConfiguration: ProgramConfiguration): void {\r\n    this.dataApiService.createProgramConfiguration(programConfiguration)\r\n      .then(pc => console.log('addProgramConfiguration:', programConfiguration, this.programConfigurations))\r\n      .catch(error =>  console.log('addProgramConfiguration error: ', error));\r\n  }\r\n\r\n  private updateProgramConfiguration(programConfiguration: ProgramConfiguration): void {\r\n    this.dataApiService.updateProgramConfiguration(programConfiguration)\r\n      .then(pc => console.log('updateProgramConfiguration:', programConfiguration, this.programConfigurations))\r\n      .catch(error =>  console.log('updateProgramConfiguration error: ', error));\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return  `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  private findProgram(id: number): Program {\r\n    return this.programs.find(p => p.id === id);\r\n  }\r\n\r\n  private async findProgramConfigurations(selectedComm: Communication) { // : ProgramConfiguration[] {\r\n    await this.getProgramConfigurations();\r\n    return this.programConfigurations.filter(pc => {\r\n      if (typeof(pc.communication) === 'number') {\r\n        if (pc.communication === selectedComm.id) {\r\n          pc.communication = selectedComm;\r\n          if (typeof(pc.program) === 'number') {\r\n            pc.program = this.findProgram(<number> pc.program);\r\n          }\r\n          return true;\r\n        } else { return false; }\r\n      } else if (pc.communication.id === selectedComm.id) {\r\n        if (typeof(pc.program) === 'number') {\r\n          pc.program = this.findProgram(<number> pc.program);\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  async getPrograms() {\r\n    try {\r\n      this.programs = await this.dataApiService.getPrograms();\r\n      return this.programs;\r\n    } catch (error) {\r\n      console.log('getPrograms error: ', error);\r\n    }\r\n  }\r\n\r\n  async getProgramConfigurations() {\r\n    try {\r\n      this.programConfigurations = await this.dataApiService.getProgramConfigurations();\r\n      return this.programConfigurations;\r\n    } catch (error) {\r\n      console.log('getProgramConfigurations error: ', error);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/communications/services/program-configurations/prog-configs-by-comm-modal.service.ts"],"sourceRoot":"webpack:///"}