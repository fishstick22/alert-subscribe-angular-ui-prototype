{"version":3,"sources":["C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients-routing.module.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients.module.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/services/client-configurations/client-configurations-modal.component.html","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/services/client-configurations/client-configurations-modal.component.scss","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/services/client-configurations/client-configurations-modal.component.ts","C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/services/client-configurations/client-configurations-modal.service.ts"],"names":[],"mappings":"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","file":"clients.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ClientsComponent } from './clients.component';\r\n\r\nconst routes: Routes =  [\r\n  { path: '',    component: ClientsComponent }\r\n];\r\n\r\nexport const routedComponents = [ClientsComponent];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClientsRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients-routing.module.ts","module.exports = \"<h4>Manage Clients</h4>\\r\\n<app-client-action-table \\r\\n  [clients]=\\\"clients\\\"\\r\\n  [displayClient]=\\\"displayClient\\\"\\r\\n  [showClientId]=\\\"true\\\"\\r\\n  [showClientCode]=\\\"true\\\"\\r\\n  [showClientName]=\\\"true\\\"\\r\\n  [showStatus]=\\\"true\\\"\\r\\n  [showAction]=\\\"true\\\"\\r\\n  (selRowOut)=\\\"setClickedRow($event)\\\"\\r\\n  (clientConfigAction)=\\\"configureClient($event)\\\">\\r\\n</app-client-action-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients.component.html\n// module id = ../../../../../src/app/clients/clients.component.html\n// module chunks = clients.module","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients.component.scss\n// module id = ../../../../../src/app/clients/clients.component.scss\n// module chunks = clients.module","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { NgbModal, ModalDismissReasons, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { Client,\r\n         ClientSortCriteria,\r\n         ClientConfigAction } from 'app/shared/model/client';\r\n\r\nimport { DataApiService } from 'app/shared/services/data-api.service';\r\n\r\nimport { ClientConfigurationsModalService } from './services/client-configurations/client-configurations-modal.service';\r\n\r\n@Component({\r\n  selector: 'app-clients',\r\n  templateUrl: './clients.component.html',\r\n  styleUrls: ['./clients.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ClientsComponent implements OnInit {\r\n\r\n  clients: Client[];\r\n  selectedRow: number;\r\n\r\n  constructor(\r\n    private dataApiService: DataApiService,\r\n    private clientConfigService: ClientConfigurationsModalService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    // console.log('ClientComponent ngOnInit...');\r\n    await this.getClients();\r\n  }\r\n\r\n  async getClients() {\r\n    try {\r\n      this.clients = await this.dataApiService.getClients();\r\n    } catch (error) {\r\n      console.log('getClients error: ', error);\r\n    }\r\n  }\r\n\r\n  private configureClient(clientConfigAction: ClientConfigAction) {\r\n    if (clientConfigAction.configType === 'communications') {\r\n      this.configureClientCommunications(clientConfigAction.clientId);\r\n    }\r\n  }\r\n\r\n  private configureClientCommunications(clientId) {\r\n    // invoke service to manage a modal dialog allowing user to\r\n    // configure the client-level communication configurations\r\n    const client: Client = this.findClient(clientId);\r\n    this.clientConfigService.configureClientModal(client);\r\n  }\r\n\r\n  private findClient(id): Client {\r\n    return this.clients.find(c => c.id === id);\r\n  }\r\n\r\n  private setClickedRow(index) {\r\n    if (this.selectedRow === index || this.selectedRow === null ) {\r\n      this.selectedRow = null;\r\n    } else {\r\n      this.selectedRow = index;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients.component.ts","// Clients feature Module\r\n//\r\nimport { NgModule } from '@angular/core';\r\n// import { CommonModule } from '@angular/common';\r\n\r\nimport { routedComponents,\r\n         ClientsRoutingModule               } from './clients-routing.module';\r\n\r\nimport { ClientConfigurationsModalComponent } from './services/client-configurations/client-configurations-modal.component';\r\nimport { ClientConfigurationsModalService   } from './services/client-configurations/client-configurations-modal.service';\r\n\r\n// shared\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // CommonModule, // gets provided by shared module\r\n    ClientsRoutingModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    routedComponents,\r\n    ClientConfigurationsModalComponent\r\n  ],\r\n  entryComponents: [\r\n    ClientConfigurationsModalComponent\r\n  ],\r\n  providers: [ClientConfigurationsModalService],\r\n})\r\nexport class ClientsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/clients.module.ts","module.exports = \"<form #clientConfigurationForm=\\\"ngForm\\\" \\r\\n(ngSubmit)=\\\"saveClientConfiguration()\\\" >\\r\\n\\r\\n  <div class=\\\"modal-header bg-gradient-dark\\\">\\r\\n    <h4 class=\\\"modal-title text-white\\\">\\r\\n      Configure Communication(s)\\r\\n      <small>for ClientId {{client.id}}: {{client.name}}</small>\\r\\n    </h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close text-white\\\" aria-label=\\\"Close\\\" (click)=\\\"configureClientModal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n    \\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div id=\\\"configuredClients\\\">\\r\\n      <table class=\\\"table table-responsive table-sm table-striped table-bordered table-hover\\\">\\r\\n        <caption></caption>\\r\\n        <thead class=\\\"bg-gradient-dark text-white\\\">\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>N<small>ame</small></th>\\r\\n            <th>E<small>mail</small></th>\\r\\n            <th>IVR</th>\\r\\n            <th>SMS</th>\\r\\n            <th>M<small>ail</small></th>\\r\\n            <th>M<small>obile</small></th>\\r\\n            <th>D<small>efault</small></th>\\r\\n            <th>E<small>ffective</small></th>\\r\\n            <th>E<small>xpiration</small></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr appDroppable *ngFor=\\\"let cc of clientConfigurations; let i = index\\\"\\r\\n              [dragOverClass]=\\\"'drag-target-border'\\\" [dragHintClass]=\\\"'drag-hint'\\\"\\r\\n              [dropEnabled]=\\\"i === lastClientConfigRow && !cc.communication.id\\\"\\r\\n              \\r\\n              (onDrop)=\\\"communicationDrop($event)\\\"\\r\\n              [class.table-info]=\\\"i == lastClientConfigRow\\\"> \\r\\n            \\r\\n            <td>\\r\\n              <span *ngIf=\\\"i !== lastClientConfigRow\\\" class=\\\"badge badge-secondary\\\">{{cc.communication.id}}</span>\\r\\n              <span *ngIf=\\\"i === lastClientConfigRow && !cc.communication.id\\\">\\r\\n                <i class=\\\"fa fa-file-o clickable\\\" aria-hidden=\\\"true\\\" \\r\\n                    title=\\\"New Client configuration for {{cc.communication.name}}\\\"></i></span>\\r\\n              <span *ngIf=\\\"i === lastClientConfigRow && cc.communication.id\\\" class=\\\"badge badge-primary\\\">{{cc.communication.id}}</span>\\r\\n            </td>\\r\\n            <td width=\\\"18%\\\"><span >{{cc.communication.name}}</span></td>\\r\\n            <td><app-select-channel-priority \\r\\n                  id=\\\"chanEmailPriority\\\" name=\\\"chanEmailPriority\\\" \\r\\n                  [(ngModel)]=\\\"cc.chanEmailPriority\\\"\\r\\n                  [actualStaticValue]=\\\"cc.chanEmailPriority\\\"\\r\\n                  [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td>\\r\\n            <td><app-select-channel-priority \\r\\n                  id=\\\"chanIvrPriority\\\" name=\\\"chanIvrPriority\\\" \\r\\n                  [(ngModel)]=\\\"cc.chanIvrPriority\\\"\\r\\n                  [actualStaticValue]=\\\"cc.chanIvrPriority\\\"\\r\\n                  [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td>\\r\\n            <td><app-select-channel-priority \\r\\n                  id=\\\"chanSmsPriority\\\" name=\\\"chanSmsPriority\\\" \\r\\n                  [(ngModel)]=\\\"cc.chanSmsPriority\\\"\\r\\n                  [actualStaticValue]=\\\"cc.chanSmsPriority\\\"\\r\\n                  [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td>  \\r\\n            <td><app-select-channel-priority \\r\\n                  id=\\\"chanMailPriority\\\" name=\\\"chanMailPriority\\\" \\r\\n                  [(ngModel)]=\\\"cc.chanMailPriority\\\"\\r\\n                  [actualStaticValue]=\\\"cc.chanMailPriority\\\"\\r\\n                  [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td> \\r\\n            <td><app-select-channel-priority \\r\\n                  id=\\\"chanMobilePriority\\\" name=\\\"chanMobilePriority\\\" \\r\\n                  [(ngModel)]=\\\"cc.chanMobilePriority\\\"\\r\\n                  [actualStaticValue]=\\\"cc.chanMobilePriority\\\"\\r\\n                  [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-priority></td> \\r\\n            <td><app-select-channel-default\\r\\n                  id=\\\"chanDefault\\\" name=\\\"chanDefault\\\" \\r\\n                  [(ngModel)]=\\\"cc.chanDefault\\\"\\r\\n                  [actualStaticValue]=\\\"cc.chanDefault\\\"\\r\\n                  [lastConfigRow]=\\\"i === lastClientConfigRow\\\" ></app-select-channel-default></td>\\r\\n            <td><app-date-eff-exp\\r\\n                  dateType=\\\"effective\\\" [commConfig]=\\\"cc\\\"\\r\\n                  [lastConfigRow]=\\\"i === lastClientConfigRow\\\"\\r\\n                  (newDateValue)=\\\"updateDateValue($event, cc, 'effective')\\\"></app-date-eff-exp></td>\\r\\n            <td><app-date-eff-exp\\r\\n                  dateType=\\\"expiration\\\" [commConfig]=\\\"cc\\\"\\r\\n                  [lastConfigRow]=\\\"i === lastClientConfigRow\\\"\\r\\n                  (newDateValue)=\\\"updateDateValue($event, cc, 'expiration')\\\"></app-date-eff-exp></td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"configureState === 'start' || configureState === 'continue'\\\">\\r\\n            <td>\\r\\n              <i class=\\\"fa fa-plus-square-o clickable\\\" aria-hidden=\\\"true\\\" \\r\\n                (click)=\\\"addClientConfig()\\\" title=\\\"Add New Client Configuration to {{client.name}}\\\"></i>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div><!--configuredClients-->\\r\\n      \\r\\n  </div>\\r\\n      \\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <div class=\\\"w-100\\\">\\r\\n      <span class=\\\"float-left\\\">Some instructional content or condition message goes here: </span>\\r\\n      <div class=\\\"float-right\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-outline-dark\\\" [disabled]=\\\"!clientConfigurationForm.valid\\\">Save</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"configureClientModal.close('Close click')\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <div id=ActionTable>\\r\\n      <app-comm-action-table *ngIf=\\\"configureState === 'pick' || configureState === 'continue'\\\"\\r\\n        [configureState]=\\\"configureState\\\"    \\r\\n        [communications]=\\\"communications\\\"\\r\\n        [displayComm]=\\\"displayComm\\\"\\r\\n        [supressComm]=\\\"supressComm\\\"\\r\\n        [displayCommStartEmpty]=\\\"true\\\"\\r\\n        [displayClient]=\\\"client.name\\\"\\r\\n        [showCommId]=\\\"true\\\"\\r\\n        [showCommName]=\\\"true\\\"\\r\\n        [showCommDesc]=\\\"true\\\"\\r\\n        [showStatus]=\\\"false\\\"\\r\\n        [showAction]=\\\"false\\\"\\r\\n        (selRowOut)=\\\"setClickedRow($event)\\\"\\r\\n        (selectedCommunication)=\\\"addClientConfig($event)\\\"\\r\\n        (commConfigAction)=\\\"configureCommunication($event)\\\">\\r\\n      </app-comm-action-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/services/client-configurations/client-configurations-modal.component.html\n// module id = ../../../../../src/app/clients/services/client-configurations/client-configurations-modal.component.html\n// module chunks = clients.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"div.scroll-list {\\n  overflow: auto;\\n  max-height: 70vh; }\\n\\n.drag-over {\\n  border: #ff525b dashed 2px; }\\n\\n.drag-hint {\\n  border: #ffc100 dashed 2px; }\\n\\n.drag-target-border {\\n  border: #00bfff dashed 2px; }\\n\\n.drag-target-border-green {\\n  border: #3c763d dashed 2px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/services/client-configurations/client-configurations-modal.component.scss\n// module id = ../../../../../src/app/clients/services/client-configurations/client-configurations-modal.component.scss\n// module chunks = clients.module","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Communication } from 'app/shared/model/communication';\r\nimport { Client } from 'app/shared/model/client';\r\nimport { ClientConfiguration } from 'app/shared/model/client-configuration';\r\n\r\nexport class ClientConfigModalResult {\r\n  newClientConfigs: ClientConfiguration[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-client-configurations-modal',\r\n  templateUrl: './client-configurations-modal.component.html',\r\n  styleUrls: ['./client-configurations-modal.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ClientConfigurationsModalComponent implements OnInit {\r\n\r\n  @Input() communications: Communication[];\r\n  @Input() client: Client = new Client(); // just becasue service inits whenever\r\n  @Input() clientConfigurations: ClientConfiguration[] = [] ;\r\n\r\n  displayComm: Communication[];\r\n  displayCommStartEmpty: boolean;\r\n  supressComm: number[];\r\n\r\n  newClientConfig: ClientConfiguration;\r\n  prevClientConfig: ClientConfiguration;\r\n  newClientConfigs: ClientConfiguration[];\r\n\r\n  lastClientConfigRow: number;\r\n  configureState: 'start' | 'pick' | 'continue' | 'configure' | 'save';\r\n\r\n  clientDropEnabled: boolean = false;\r\n\r\n  selectedRow: number;\r\n\r\n  today = new Date();\r\n  tomorrow = new Date();\r\n\r\n  constructor(\r\n    private configureClientModal: NgbActiveModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  modalInit() {\r\n    // console.log('ClientConfigComponent init: ');\r\n    // console.log(this.client);\r\n    // get the list of clients to populate the dropdown (covered in @Input() clients: Client[];)\r\n    // check if there are progConfig already (for now just checking for first one, have to check for eff dates)\r\n    this.displayCommStartEmpty = true;\r\n    this.displayComm = [];\r\n    this.newClientConfigs = [];\r\n    this.tomorrow.setDate(this.today.getDate() + 1);\r\n    this.configureState = 'start';\r\n\r\n    this.supressComm = this.findExistingConfiguredComms();\r\n  }\r\n\r\n  private addClientConfig(communication?: Communication) {\r\n\r\n    if (this.newClientConfig && this.configureState === 'pick') {\r\n      this.newClientConfig.communication = communication;\r\n      this.supressComm.push(communication.id);\r\n      this.clientDropEnabled = false;\r\n    }\r\n\r\n    if (this.configureState === 'start' || this.configureState === 'continue') {\r\n      // first time through\r\n      this.lastClientConfigRow = this.clientConfigurations.length;\r\n      if (this.lastClientConfigRow === 0) {\r\n        this.newClientConfig = new ClientConfiguration();\r\n        this.newClientConfig.effective =  // TODO shared util method\r\n            this.tomorrow.getFullYear() + '-' +\r\n          (this.tomorrow.getMonth() + 1) + '-' +\r\n            this.tomorrow.getDate();\r\n      } else {\r\n        // clone setting from previous config row\r\n        this.prevClientConfig = this.clientConfigurations[this.lastClientConfigRow - 1];\r\n        this.newClientConfig = new ClientConfiguration(this.prevClientConfig);\r\n        this.newClientConfig.effective = this.prevClientConfig.effective;\r\n      }\r\n      this.clientConfigurations[this.clientConfigurations.length] = this.newClientConfig;\r\n      this.newClientConfigs[this.newClientConfigs.length] = this.newClientConfig;\r\n      this.newClientConfig.expiration = AppConstants.UNEXPIRED;\r\n      this.newClientConfig.client = this.client;\r\n\r\n      this.newClientConfig.communication = new Communication();\r\n\r\n      this.configureState = 'pick';\r\n      this.clientDropEnabled = true;\r\n    } else {\r\n      if (this.newClientConfig && this.configureState === 'pick') {\r\n        this.configureState = 'continue';\r\n      }\r\n    }\r\n  }\r\n\r\n  private communicationDrop(dragEvent) {\r\n    console.log('ClientConfigComponent communicationDrop: ', dragEvent);\r\n    if (dragEvent.dragData && typeof(dragEvent.dragData.id) === 'number' ) {\r\n      this.addClientConfig(this.findCommunication(dragEvent.dragData.id));\r\n    }\r\n  }\r\n\r\n  private findCommunication(id): Communication {\r\n    return this.communications.find(c => c.id === id);\r\n  }\r\n\r\n  private findExistingConfiguredComms(): number[] {\r\n    const existing: number[] = [];\r\n    for (let i = 0; i < this.clientConfigurations.length; i++) {\r\n      existing.push(this.clientConfigurations[i].communication.id);\r\n    }\r\n    return existing;\r\n  }\r\n\r\n  private saveClientConfiguration() {\r\n    console.log('ClientConfigComponent save');\r\n    console.log(this.newClientConfig, ' client id: ', this.client);\r\n\r\n    const modalResult: ClientConfigModalResult = {\r\n      newClientConfigs: this.newClientConfigs\r\n    };\r\n\r\n    this.configureClientModal.close({resultTxt: AppConstants.SAVESUCCESS, modalResult: modalResult});\r\n  }\r\n\r\n  private updateDateValue(newDateValue, cc: ClientConfiguration, dateType: string) {\r\n    console.log('ClientConfigComponent updateDateValue: ', newDateValue, cc, dateType);\r\n    if (dateType === 'effective') {\r\n      cc.effective = newDateValue;\r\n    }\r\n    if (dateType === 'expiration') {\r\n      cc.expiration = newDateValue;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/services/client-configurations/client-configurations-modal.component.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { NgbModal,\r\n  ModalDismissReasons,\r\n  NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppConstants } from 'app/app-constants';\r\nimport { Communication } from 'app/shared/model/communication';\r\nimport { Client } from 'app/shared/model/client';\r\nimport { ClientConfiguration } from 'app/shared/model/client-configuration';\r\n\r\nimport { ClientConfigurationsModalComponent,\r\n   ClientConfigModalResult } from './client-configurations-modal.component';\r\nimport { DataApiService } from 'app/shared/services/data-api.service';\r\n\r\n@Injectable()\r\nexport class ClientConfigurationsModalService {\r\n\r\n  communications: Communication[];\r\n  client: Client;\r\n  clients: Client[];\r\n  clientConfigurations: ClientConfiguration[];\r\n  closeResult: string;\r\n\r\n  constructor(\r\n    private dataApiService: DataApiService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  private addClientConfiguration(clientConfiguration: ClientConfiguration): void {\r\n    this.dataApiService.createClientConfiguration(clientConfiguration)\r\n      .then(pc => console.log('addClientConfiguration:', clientConfiguration, this.clientConfigurations))\r\n      .catch(error =>  console.log('addClientConfiguration error: ', error));\r\n  }\r\n  async configureClientModal(client: Client) {\r\n    const modalOpts: NgbModalOptions = {\r\n      size: 'lg'\r\n    };\r\n    const modalRef = this.modalService.open(ClientConfigurationsModalComponent, modalOpts);\r\n    const modalComp: ClientConfigurationsModalComponent  = modalRef.componentInstance;\r\n\r\n    modalComp.communications = await this.getCommunications();\r\n    modalComp.client = client;\r\n    modalComp.clientConfigurations = await this.findClientConfigurations(client);\r\n    modalComp.modalInit();\r\n\r\n    modalRef.result.then((result) => {\r\n      if (result.resultTxt === AppConstants.SAVESUCCESS) {\r\n        console.log('configureClientModal result: ', result.modalResult);\r\n        this.closeResult = `Closed with: ${result.resultTxt}`;\r\n        if (result.modalResult) {\r\n          const modalResult: ClientConfigModalResult = result.modalResult;\r\n          // if (modalResult.prevProgConfig) {\r\n          //   this.updateClientConfiguration(modalResult.prevProgConfig);\r\n          // }\r\n          if (modalResult.newClientConfigs) {\r\n            for (let i = 0; i < modalResult.newClientConfigs.length; i++) {\r\n              this.addClientConfiguration(modalResult.newClientConfigs[i]);\r\n            }\r\n          }\r\n        } else {\r\n          // this would be some kind of exception\r\n          console.log('CommunicationComponent configureClientModal bad result: ', result.modalResult);\r\n        }\r\n      } else {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }\r\n      // this.setClickedRow(null);\r\n      console.log('configureClientModal result: ', this.closeResult);\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      // this.setClickedRow(null);\r\n      console.log('configureClientModal result: ', this.closeResult);\r\n    });\r\n  }\r\n\r\n  private findCommunication(id: number): Communication {\r\n    return this.communications.find(c => c.id === id);\r\n  }\r\n\r\n  private async findClientConfigurations(selectedClient: Client) { // : ClientConfiguration[] {\r\n    await this.getClientConfigurations();\r\n    return this.clientConfigurations.filter(pc => {\r\n      if (typeof(pc.client) === 'number') {\r\n        if (pc.client === selectedClient.id) {\r\n          pc.client = selectedClient;\r\n          if (typeof(pc.communication) === 'number') {\r\n            pc.communication = this.findCommunication(<number>pc.communication);\r\n          }\r\n          return true;\r\n        } else { return false; }\r\n      } else if (pc.client.id === selectedClient.id) {\r\n        if (typeof(pc.communication) === 'number') {\r\n          pc.communication = this.findCommunication(<number>pc.communication);\r\n        }\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return  `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  async getCommunications() {\r\n    try {\r\n      this.communications = await this.dataApiService.getCommunications();\r\n      return this.communications;\r\n    } catch (error) {\r\n      console.log('getCommunications error: ', error);\r\n    }\r\n  }\r\n\r\n  async getClients() {\r\n    try {\r\n      this.clients = await this.dataApiService.getClients();\r\n      return this.clients;\r\n    } catch (error) {\r\n      console.log('getClients error: ', error);\r\n    }\r\n  }\r\n\r\n  async getClientConfigurations() {\r\n    try {\r\n      this.clientConfigurations = await this.dataApiService.getClientConfigurations();\r\n      return this.clientConfigurations;\r\n    } catch (error) {\r\n      console.log('getClientConfigurations error: ', error);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/U92AQLF/Documents/VSCode/alert-subscribe-angular-ui-prototype/src/app/clients/services/client-configurations/client-configurations-modal.service.ts"],"sourceRoot":"webpack:///"}